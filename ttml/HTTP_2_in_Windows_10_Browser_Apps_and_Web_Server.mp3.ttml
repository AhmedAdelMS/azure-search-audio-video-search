<?xml version="1.0" encoding="utf-8"?>
<tt xml:lang="en-us" xmlns="http://www.w3.org/ns/ttml" xmlns:tts="http://www.w3.org/ns/ttml#styling" xmlns:ttm="http://www.w3.org/ns/ttml#metadata">
  <head>
    <metadata>
      <ttm:title>Media.wvx.aib</ttm:title>
      <ttm:copyright>Copyright (c) 2013 Microsoft Corporation.  All rights reserved.</ttm:copyright>
    </metadata>
    <styling>
      <style xml:id="Style1" tts:fontFamily="proportionalSansSerif" tts:fontSize="0.8c" tts:textAlign="center" tts:color="white" />
    </styling>
    <layout>
      <region style="Style1" xml:id="CaptionArea" tts:origin="0c 12.6c" tts:extent="32c 2.4c" tts:backgroundColor="rgba(0,0,0,160)" tts:displayAlign="center" tts:padding="0.3c 0.5c" />
    </layout>
    <recognizability>0.921</recognizability>
  </head>
  <body region="CaptionArea">
    <div>
      <p begin="00:00:00.340" end="00:00:04.450">Hello, my name is rob trace and I'll be here talking tuesday about</p>
      <p begin="00:00:04.450" end="00:00:11.920">the new http to protocol and how it's implemented in windows ten?</p>
      <p begin="00:00:11.920" end="00:00:16.720">So, we're going to talk about first just...real brief summary of...http</p>
      <p begin="00:00:16.720" end="00:00:21.660">to is important why we spent the time and effort implement windows ten?</p>
      <p begin="00:00:21.660" end="00:00:26.500">Then we will talk learn overview of hp to how it works how it's divx information</p>
      <p begin="00:00:26.500" end="00:00:30.040">...one and then lastly what it means to be</p>
      <p begin="00:00:30.040" end="00:00:38.060">in windows tended how it actually shows up for a developers and for a customers?</p>
      <p begin="00:00:38.060" end="00:00:43.920">why did we are go to all this effort to define a new internet standard few years ago there</p>
      <p begin="00:00:43.920" end="00:00:48.350">was a huge realization that performance matters a lot of studies were done by</p>
      <p begin="00:00:48.350" end="00:00:53.200">sites like google by microsoft by amazon about the effects of slow</p>
      <p begin="00:00:53.200" end="00:00:57.570">site performance about slow out performance on user behavior and what we found</p>
      <p begin="00:00:57.570" end="00:01:02.020">was that money is defined a lot by site performance</p>
      <p begin="00:01:02.020" end="00:01:07.360">slow sites users click away they go you somebody else's site?</p>
      <p begin="00:01:07.360" end="00:01:12.090">Through that investigation there was also realization that hp one-one was holding back</p>
      <p begin="00:01:12.090" end="00:01:16.130">side performance the way that hp one-one transfers data across</p>
      <p begin="00:01:16.130" end="00:01:20.110">the internet causes inherent slowness is affected very heavily</p>
      <p begin="00:01:20.110" end="00:01:25.810">by latency and it was a problem for basically taking</p>
      <p begin="00:01:25.810" end="00:01:30.660">site performance to where it is where we wanted to get...</p>
      <p begin="00:01:30.660" end="00:01:33.340">It's also very large problem for mobile networks</p>
      <p begin="00:01:33.340" end="00:01:38.230">and as they started to emerge we saw more and more high latency networks more and</p>
      <p begin="00:01:38.230" end="00:01:43.470">more users using these latency networks and more and more sites slowness.</p>
      <p begin="00:01:43.470" end="00:01:48.450">In addition to that over the last three years so there's been a very large movement towards using</p>
      <p begin="00:01:48.450" end="00:01:53.980">tls by default microsoft themselves announce that they're going to be moving all of their</p>
      <p begin="00:01:53.980" end="00:01:57.800">sites overs dls you'll see moves by similar companies who</p>
      <p begin="00:01:57.800" end="00:01:59.840">...throughout the industry and</p>
      <p begin="00:01:59.840" end="00:02:05.260">we you migrate to dls also is impacted by the latency problem and</p>
      <p begin="00:02:05.260" end="00:02:10.870">expand the makes the problem with hp one-one connections even greater.</p>
      <p begin="00:02:10.870" end="00:02:13.080">Lastly the web is evolving and there's a</p>
      <p begin="00:02:13.080" end="00:02:17.500">need for more bidirectional communications there's a need for</p>
      <p begin="00:02:17.500" end="00:02:21.950">cheaper quicker faster protocols to for us to enable new site</p>
      <p begin="00:02:21.950" end="00:02:25.490">developing new application development this is really what was</p>
      <p begin="00:02:25.490" end="00:02:31.930">behind the motivation for starting on a protocol hp too.</p>
      <p begin="00:02:31.930" end="00:02:36.960">So, when you look at the drafter hp to you'll see</p>
      <p begin="00:02:36.960" end="00:02:40.900">...section on why what was the motivating factors what</p>
      <p begin="00:02:40.900" end="00:02:42.990">...the requirements that...trying to achieve with</p>
      <p begin="00:02:42.990" end="00:02:48.210">...new protocol and the number one thing was to make a user perceive</p>
      <p begin="00:02:48.210" end="00:02:48.900">...difference</p>
      <p begin="00:02:48.900" end="00:02:53.900">...performance and what we want to ulysses users have the feeling that...apps</p>
      <p begin="00:02:53.900" end="00:03:00.140">...their sites are actually performing faster the second thing is that it's impossible</p>
      <p begin="00:03:00.140" end="00:03:04.420">to develop a new protocol if it doesn't work over the existing infrastructure</p>
      <p begin="00:03:04.420" end="00:03:08.730">so primary goal of hp to is to be able to traverse existing internet and all</p>
      <p begin="00:03:08.730" end="00:03:13.650">the things that are out there whether it's proxies whether it's isp?</p>
      <p begin="00:03:13.650" end="00:03:16.260">Gateways all of these different technologies</p>
      <p begin="00:03:16.260" end="00:03:19.990">are deployed today any new protocol has to work over the</p>
      <p begin="00:03:19.990" end="00:03:22.390">...this infrastructure and</p>
      <p begin="00:03:22.390" end="00:03:27.130">then the last thing was a real definable goal to work with</p>
      <p begin="00:03:27.130" end="00:03:31.710">today's content we wanted to be able to have a protocol that worked</p>
      <p begin="00:03:31.710" end="00:03:36.440">with the applications with the sites with the content as it was developed today</p>
      <p begin="00:03:36.440" end="00:03:41.410">does not mean that content...involved in the future to be better with http</p>
      <p begin="00:03:41.410" end="00:03:45.950">to but it does mean that we wanted to take an existing site runner with</p>
      <p begin="00:03:45.950" end="00:03:49.740">a new transport and then be able to see the user benefits out of</p>
      <p begin="00:03:49.740" end="00:03:54.160">it right away gave us something that we could use immediately that within</p>
      <p begin="00:03:54.160" end="00:04:01.390">evolve application...development for the long-term.</p>
      <p begin="00:04:01.390" end="00:04:05.720">So, what is http to essentially primarily hp</p>
      <p begin="00:04:05.720" end="00:04:10.100">to is a different mapping of the http transport in</p>
      <p begin="00:04:10.100" end="00:04:14.410">the http semantics to tcp and word enables</p>
      <p begin="00:04:14.410" end="00:04:19.390">...multiplexing...heart this gives us the ability to send and receive data</p>
      <p begin="00:04:19.390" end="00:04:23.090">of multiple request receive multiple responses over the same...</p>
      <p begin="00:04:23.090" end="00:04:29.080">channel in addition to that we've included header compression in the protocol which is going to mean</p>
      <p begin="00:04:29.080" end="00:04:33.880">...less biter sent over the wire very important for some scenarios like</p>
      <p begin="00:04:33.880" end="00:04:36.270">...of mobile broadband or we have</p>
      <p begin="00:04:36.270" end="00:04:40.940">...links or slow links and the last one is server push</p>
      <p begin="00:04:40.940" end="00:04:45.640">...server push enables a site a server-side to anticipate</p>
      <p begin="00:04:45.640" end="00:04:52.300">request and...send the content and pri prime the client for the requests are going-to be</p>
      <p begin="00:04:52.300" end="00:04:56.480">coming throughout the application these three features are really the heart of what</p>
      <p begin="00:04:56.480" end="00:05:08.830">http to is going to be?</p>
      <p begin="00:05:08.830" end="00:05:13.390">a negotiated protocol and this is one of the reasons that is compatible with the web</p>
      <p begin="00:05:13.390" end="00:05:16.490">...deployed today?</p>
      <p begin="00:05:16.490" end="00:05:21.200">It works over the standard hp ports port ad import for forty-three</p>
      <p begin="00:05:21.200" end="00:05:25.270">at works with the schemes are existing today in http</p>
      <p begin="00:05:25.270" end="00:05:30.890">in https it is exactly the same as a spone one-in-one</p>
      <p begin="00:05:30.890" end="00:05:35.430">...before it so when my application requests.</p>
      <p begin="00:05:35.430" end="00:05:37.400">Aac resource over https.</p>
      <p begin="00:05:39.710" end="00:05:42.850">By the fall we will use port for forty-three.</p>
      <p begin="00:05:42.850" end="00:05:46.450">If I use http will stay on port eighty.</p>
      <p begin="00:05:46.450" end="00:05:51.740">In addition to this it also will support ...are either has a custom port like eighty,</p>
      <p begin="00:05:51.740" end="00:05:54.890">eighty so it works the same way as a should be</p>
      <p begin="00:05:54.890" end="00:06:00.760">one-one and therefore a work with the same content and retain the same semantics...</p>
      <p begin="00:06:00.760" end="00:06:05.650">second thing is just really important want to highlighted http to the specification works</p>
      <p begin="00:06:05.650" end="00:06:09.730">with both http scheme and https scheme.</p>
      <p begin="00:06:09.730" end="00:06:17.120">Meaning that it is possible to set http to across the internet in clear text.</p>
      <p begin="00:06:17.120" end="00:06:20.870">How this works and how this is negotiated is...I use</p>
      <p begin="00:06:20.870" end="00:06:26.450">...http uri will negotiatetcp connection first?</p>
      <p begin="00:06:26.450" end="00:06:28.100">And, then we'll negotiate tls</p>
      <p begin="00:06:28.100" end="00:06:31.590">it's exactly the same processes you get when you use http one-one.</p>
      <p begin="00:06:33.350" end="00:06:37.960">when the client since the tls client hello we included a lp</p>
      <p begin="00:06:37.960" end="00:06:42.540">n extension that will have a protocol identifier h</p>
      <p begin="00:06:42.540" end="00:06:44.950">to nh to essentially is the client</p>
      <p begin="00:06:44.950" end="00:06:50.480">advertisement that is possible talked me over http to?</p>
      <p begin="00:06:50.480" end="00:06:55.300">The server takes the client...looks at that it supports http to</p>
      <p begin="00:06:55.300" end="00:07:00.010">aswell will return the client the server hello with</p>
      <p begin="00:07:00.010" end="00:07:05.630">the eyal piano...to at this point both sides of excepted that they support</p>
      <p begin="00:07:05.630" end="00:07:09.770">each...and we'll start with</p>
      <p begin="00:07:09.770" end="00:07:13.560">...ha settings frame in http to the minute</p>
      <p begin="00:07:13.560" end="00:07:18.040">...tls complete with this negotiation this means that</p>
      <p begin="00:07:18.040" end="00:07:22.960">a site running and older web server that only supports http one-one</p>
      <p begin="00:07:22.960" end="00:07:26.240">we'll see this tls negotiation will not reply</p>
      <p begin="00:07:26.240" end="00:07:31.050">with each to the client will continue normally on http one-one brain</p>
      <p begin="00:07:31.050" end="00:07:34.430">...is an upgraded server will then see the</p>
      <p begin="00:07:34.430" end="00:07:38.510">...to marker will then respond with its own</p>
      <p begin="00:07:38.510" end="00:07:42.600">extension protocol string and those connection will procedure http</p>
      <p begin="00:07:42.600" end="00:07:45.780">...very simple for clear text</p>
      <p begin="00:07:45.780" end="00:07:49.500">...similar of the we start with</p>
      <p begin="00:07:49.500" end="00:07:54.300">http negotiation we set up the connection and then we send our</p>
      <p begin="00:07:54.300" end="00:07:58.440">first request over http one-one and...request is allowed to</p>
      <p begin="00:07:58.440" end="00:08:02.570">included upgrade header that indicates the client is available</p>
      <p begin="00:08:02.570" end="00:08:07.790">over http to when the server sees that...header the</p>
      <p begin="00:08:07.790" end="00:08:14.000">server then can send back a response saying that great wilson bakke switching</p>
      <p begin="00:08:14.000" end="00:08:20.260">protocol responses and then the every subsequent request on that?</p>
      <p begin="00:08:20.260" end="00:08:22.420">On that connection will be over hp</p>
      <p begin="00:08:22.420" end="00:08:29.160">...essentially the client on...next packet will send out to settings frame.</p>
      <p begin="00:08:29.160" end="00:08:33.910">So, what this enables is that both hp to pcs</p>
      <p begin="00:08:33.910" end="00:08:37.980">at http transports can be negotiated and can be supported</p>
      <p begin="00:08:37.980" end="00:08:42.900">essentially an environment where the client can support hp one-one hp to</p>
      <p begin="00:08:42.900" end="00:08:47.930">...can connect to any server regardless of what they support?</p>
      <p begin="00:08:47.930" end="00:08:53.200">Now for windows ten we're not going to be supporting the http</p>
      <p begin="00:08:53.200" end="00:08:58.210">...text initially this is something that we anticipate will evolve and</p>
      <p begin="00:08:58.210" end="00:09:07.470">we will implement over the long-term...not going to be in the first release of windows...</p>
      <p begin="00:09:07.470" end="00:09:11.130">So, connections this is really at again at the heart of the</p>
      <p begin="00:09:11.130" end="00:09:15.930">...after we've decided between the client-server that we're going to use http</p>
      <p begin="00:09:15.930" end="00:09:21.540">to we're going to...connections and there's a new concept in hp</p>
      <p begin="00:09:21.540" end="00:09:25.950">to called a stream now stream is essentially a request response</p>
      <p begin="00:09:25.950" end="00:09:30.180">pair but we manage multiple stream to them</p>
      <p begin="00:09:30.180" end="00:09:34.860">...connection to hp one-one how this worked was client sets</p>
      <p begin="00:09:34.860" end="00:09:39.630">up a connection and goes ahead makes the first request that request has</p>
      <p begin="00:09:39.630" end="00:09:43.280">to fully complete before they can make their second connection</p>
      <p begin="00:09:43.280" end="00:09:49.040">they're second request so on for the third and the fourth.</p>
      <p begin="00:09:49.040" end="00:09:54.120">Network clients...one-one to overcome this...blocking is that will</p>
      <p begin="00:09:54.120" end="00:09:58.250">...multiple connections so when I have one connection is that has</p>
      <p begin="00:09:58.250" end="00:10:02.840">a request in-flight and I have a second requests that I need to make a little bit</p>
      <p begin="00:10:02.840" end="00:10:06.610">of second connection and the third and the fourth.</p>
      <p begin="00:10:06.610" end="00:10:11.030">What this does is we'll see a lot of tcp connections coming...the client and</p>
      <p begin="00:10:11.030" end="00:10:15.860">they're all subject to...slow start they're all subject to latency of setting up</p>
      <p begin="00:10:15.860" end="00:10:20.660">to connection in particular with tls will have latency of setting up the</p>
      <p begin="00:10:20.660" end="00:10:23.660">...us portion...connection?</p>
      <p begin="00:10:23.660" end="00:10:27.970">...too it's very different we set up one connection so</p>
      <p begin="00:10:27.970" end="00:10:30.690">we pay the cost of setting up the connection only wants.</p>
      <p begin="00:10:31.810" end="00:10:34.950">And, then once we've set up that connection we can initiate multiple</p>
      <p begin="00:10:34.950" end="00:10:39.520">streams and these streams can be delivered out of order and,</p>
      <p begin="00:10:39.520" end="00:10:42.060">they can be requested...to a hundred at a</p>
      <p begin="00:10:42.060" end="00:10:47.380">time protocol actual allow for more but the hundred as the default so will happen now with the</p>
      <p begin="00:10:47.380" end="00:10:52.000">client as we q up requests we can put those on the wire and send them off the server right</p>
      <p begin="00:10:52.000" end="00:10:56.870">away and then the server can respond back in the order that the server</p>
      <p begin="00:10:56.870" end="00:10:58.340">things that makes the most sense.</p>
      <p begin="00:10:59.370" end="00:11:03.630">Meaning that if I have content is ready to be sent right away and I have an</p>
      <p begin="00:11:03.630" end="00:11:08.290">...tcp connection I can start sending that data the client right now well I</p>
      <p begin="00:11:08.290" end="00:11:12.420">maybe off calculating a different response so what happens is now we</p>
      <p begin="00:11:12.420" end="00:11:17.320">can fully optimize the transport between the client and the server depending on what's</p>
      <p begin="00:11:17.320" end="00:11:22.160">most important or the things that are queued up for that the...requests.</p>
      <p begin="00:11:22.160" end="00:11:26.940">The other piece of the protocol that comes in here is a decline can advertise a priority which</p>
      <p begin="00:11:26.940" end="00:11:31.200">means that the client can tell the server what is the most important</p>
      <p begin="00:11:31.200" end="00:11:35.640">thing to deliver back to it so now the server has context about what the client</p>
      <p begin="00:11:35.640" end="00:11:44.400">wants and can again make these decisions on how to send best...back to the client?</p>
      <p begin="00:11:44.400" end="00:11:49.660">the streams very simple there are...streams are initiated by the client and then</p>
      <p begin="00:11:49.660" end="00:11:54.400">there are push trains which will coverages...initiated by the server.</p>
      <p begin="00:11:54.400" end="00:12:05.410">The client streams are always an odd number strain the...terms are always an even number</p>
      <p begin="00:12:05.410" end="00:12:10.410">So, the stream lifecycle is also important concept and it really starts</p>
      <p begin="00:12:10.410" end="00:12:14.610">with...a client wants to go ahead and request resource so the client opens</p>
      <p begin="00:12:14.610" end="00:12:17.940">their connection and they want to create a stream so what</p>
      <p begin="00:12:17.940" end="00:12:23.000">that does that puts the stream into the open state...decides it's going to</p>
      <p begin="00:12:23.000" end="00:12:27.380">...resource it opens a stream essentially and then goes ahead and sends out</p>
      <p begin="00:12:27.380" end="00:12:34.050">...header frame this create an open stream from both standpoint the client and the server.</p>
      <p begin="00:12:34.050" end="00:12:39.230">And, that stream then continues as long as the client is continuing to</p>
      <p begin="00:12:39.230" end="00:12:44.210">say transmit data when the client is done transmitting it's headers field or if it is</p>
      <p begin="00:12:44.210" end="00:12:49.050">...has data associated with the request is done transmitting data</p>
      <p begin="00:12:49.050" end="00:12:53.070">...and...stream message and it as</p>
      <p begin="00:12:53.070" end="00:12:57.790">an stream flag so once the client sends...stream flag that</p>
      <p begin="00:12:57.790" end="00:13:02.770">stream is closed from the clients perspective...that it is sent all the data it's going to</p>
      <p begin="00:13:02.770" end="00:13:07.900">...and the server should know that and...it does that make that makes the</p>
      <p begin="00:13:07.900" end="00:13:14.820">session half close local the server has the same process as a server sends back headers</p>
      <p begin="00:13:14.820" end="00:13:19.770">and data when it is done...can send...stream flac so again that</p>
      <p begin="00:13:19.770" end="00:13:24.730">and stream floodwaters...by the client becomes have closed remote?</p>
      <p begin="00:13:24.730" end="00:13:25.860">And,...and then</p>
      <p begin="00:13:25.860" end="00:13:31.160">...stream transmits transitions into a close state when both sides have</p>
      <p begin="00:13:31.160" end="00:13:36.050">...stream and closers the other way...stream can transition directly from open</p>
      <p begin="00:13:36.050" end="00:13:41.220">to closed is that a client or server consent a reset stream.</p>
      <p begin="00:13:41.220" end="00:13:45.490">Message and we send research string that means that stream must be torn down and,</p>
      <p begin="00:13:45.490" end="00:13:48.900">all-state and all processing on it needs to...</p>
      <p begin="00:13:48.900" end="00:13:53.650">Stream can transition directly from open to closed.</p>
      <p begin="00:13:53.650" end="00:13:57.920">The other state that will have is the idle state and the</p>
      <p begin="00:13:57.920" end="00:14:01.870">idle state is one we're using server push meaning...the</p>
      <p begin="00:14:01.870" end="00:14:06.540">server is intending to push resources to the client and how that works is</p>
      <p begin="00:14:06.540" end="00:14:11.380">a server initially sends a message...push promise and that push promise indicates</p>
      <p begin="00:14:11.380" end="00:14:17.150">all of the resources that the server wants to push to the client each one of those resources</p>
      <p begin="00:14:17.150" end="00:14:20.300">creates a stream on...client?</p>
      <p begin="00:14:20.300" end="00:14:22.240">That is an idle state the</p>
      <p begin="00:14:22.240" end="00:14:26.090">client is waiting for more data from the server at that point.</p>
      <p begin="00:14:26.090" end="00:14:29.910">Now what happens is that the push promise opens a stream</p>
      <p begin="00:14:29.910" end="00:14:33.420">entitle as the server sends data or the client</p>
      <p begin="00:14:33.420" end="00:14:38.740">consent things like a reset stream on-message that the stream</p>
      <p begin="00:14:38.740" end="00:14:43.470">will move from and I'll stay to an open state.</p>
      <p begin="00:14:43.470" end="00:14:49.200">...those streams are then reserved when the server has sent those</p>
      <p begin="00:14:49.200" end="00:14:52.100">push...the messages as data transmits</p>
      <p begin="00:14:52.100" end="00:14:56.710">it goes from open and then we go into the and stream flags where we end up in the</p>
      <p begin="00:14:56.710" end="00:15:01.100">have close states or we end up in a closed aone both sides of done transmitting on</p>
      <p begin="00:15:01.100" end="00:15:05.330">a particular stream and then we clean-up after that so what this is</p>
      <p begin="00:15:05.330" end="00:15:09.700">there's a simple life-cycle to every stream...really extends to the extent of</p>
      <p begin="00:15:09.700" end="00:15:14.290">...sent a request and then the response and once</p>
      <p begin="00:15:14.290" end="00:15:19.340">data is all done both sides can indicate that were done and...the stream we can</p>
      <p begin="00:15:19.340" end="00:15:23.710">clean-up the stream without closing the connection and we</p>
      <p begin="00:15:23.710" end="00:15:28.700">definitely want to keep the connection open until all of the streams all of the</p>
      <p begin="00:15:28.700" end="00:15:38.130">...responses of come in a little bit different model them with hp one-one.</p>
      <p begin="00:15:38.130" end="00:15:40.400">The next feature is inhp to</p>
      <p begin="00:15:40.400" end="00:15:44.050">...compression and...compression is essentially taking</p>
      <p begin="00:15:44.050" end="00:15:48.940">a header and we're going to start replacing it with literal values and what we do is we</p>
      <p begin="00:15:48.940" end="00:15:53.190">generate to tables there's a built-in static table of</p>
      <p begin="00:15:53.190" end="00:15:56.820">certain limited number of headers that are</p>
      <p begin="00:15:56.820" end="00:16:01.460">pre indexed in the system and those headers might include method</p>
      <p begin="00:16:01.460" end="00:16:05.360">...get...might include the...http?</p>
      <p begin="00:16:05.360" end="00:16:07.010">And, what they...there indexed into a</p>
      <p begin="00:16:07.010" end="00:16:11.990">table that is essentially at the start of every connection there's a second table</p>
      <p begin="00:16:11.990" end="00:16:16.510">is a dynamic table and that is as the lifetime of a connection progresses we</p>
      <p begin="00:16:16.510" end="00:16:22.040">can add entries into the compression table that are going to be reused,</p>
      <p begin="00:16:22.040" end="00:16:25.050">for example, a cookie or maybe the user agent</p>
      <p begin="00:16:25.050" end="00:16:31.730">string and how this progresses is that the client?</p>
      <p begin="00:16:31.730" end="00:16:36.310">As they send headers can then indicate whether this is</p>
      <p begin="00:16:36.310" end="00:16:40.720">...reference to item that already exist in the table or</p>
      <p begin="00:16:40.720" end="00:16:45.690">whether it's a literal value that may potentially be indexed into the table.</p>
      <p begin="00:16:45.690" end="00:16:49.790">The static table never changes but the dynamic table is a running</p>
      <p begin="00:16:49.790" end="00:16:55.790">list of how what the current state of the connection is the list is ordered</p>
      <p begin="00:16:55.790" end="00:16:58.960">means that the first entry goes in is the first entry goes</p>
      <p begin="00:16:58.960" end="00:17:04.210">out is also limited in size so the size of the table is defined</p>
      <p begin="00:17:04.210" end="00:17:08.830">...connection setup that goes on between the...the server?</p>
      <p begin="00:17:08.830" end="00:17:12.660">What will happen is that as we add new items to table</p>
      <p begin="00:17:12.660" end="00:17:15.550">if the table exceeds the maximum size</p>
      <p begin="00:17:15.550" end="00:17:18.540">we will then take out the entries that came</p>
      <p begin="00:17:18.540" end="00:17:23.530">in first so it's basically a rolling list and it is order is also</p>
      <p begin="00:17:23.530" end="00:17:28.480">possible to have multiple entries of the exact same header in</p>
      <p begin="00:17:28.480" end="00:17:34.230">the dynamic table meaning that I could put user agent or some other?</p>
      <p begin="00:17:34.230" end="00:17:39.650">Header into the table multiple times and multiple times can be with the same value or with different</p>
      <p begin="00:17:39.650" end="00:17:48.790">values meaning I could put multiple cookies into the...at the same time.</p>
      <p begin="00:17:48.790" end="00:17:53.920">So, the operation itself there are basically two types of headers now there's</p>
      <p begin="00:17:53.920" end="00:17:58.630">index header which means that...reference to header by supplying</p>
      <p begin="00:17:58.630" end="00:18:03.120">...index name and what happens is on the encoder side</p>
      <p begin="00:18:03.120" end="00:18:07.310">one more sending data we can look for the header in the table and we can</p>
      <p begin="00:18:07.310" end="00:18:12.820">replace the full header with...and then we transmit that to the other side</p>
      <p begin="00:18:12.820" end="00:18:17.110">of the connection the decoder will find that index and</p>
      <p begin="00:18:17.110" end="00:18:22.170">more replace it with what the value is in the table?</p>
      <p begin="00:18:22.170" end="00:18:26.240">This is what the heart of the compression this is how we reduce the number of bytes rashes</p>
      <p begin="00:18:26.240" end="00:18:32.400">...on the wire the other way is we send a literal which is a full header and then</p>
      <p begin="00:18:32.400" end="00:18:37.640">...that literal can be marked in three ways number one is</p>
      <p begin="00:18:37.640" end="00:18:39.810">add this to the table so we added to</p>
      <p begin="00:18:39.810" end="00:18:44.720">the dynamic table so if we have a new header that we want to add to the table we can just</p>
      <p begin="00:18:44.720" end="00:18:46.750">...this to the table.</p>
      <p begin="00:18:46.750" end="00:18:51.310">If we want to have a...item that we should not add to the table</p>
      <p begin="00:18:51.310" end="00:18:55.930">...market is do not add to the table and then the third state is never add this to</p>
      <p begin="00:18:55.930" end="00:19:00.340">the table and that's really an instruction for all of the intermediaries between the client</p>
      <p begin="00:19:00.340" end="00:19:04.940">and the server to not add this to their table all the way through and leave it</p>
      <p begin="00:19:04.940" end="00:19:09.000">as a literal throughout the connection and.</p>
      <p begin="00:19:09.000" end="00:19:09.470">What this</p>
      <p begin="00:19:09.470" end="00:19:14.600">does is by having this mechanism where we indicate from the sender?</p>
      <p begin="00:19:14.600" end="00:19:19.060">What...what not...to the table we can have a</p>
      <p begin="00:19:19.060" end="00:19:23.920">matching table between the client the center for both the send and receive paths?</p>
      <p begin="00:19:23.920" end="00:19:28.850">So, as a client I will end up with a...table where I</p>
      <p begin="00:19:28.850" end="00:19:32.940">add values depending on what I want to have into the table</p>
      <p begin="00:19:32.940" end="00:19:39.100">and marking them as a literal that say add to the table...server as</p>
      <p begin="00:19:39.100" end="00:19:44.090">a receiver will then respect those markings on the literal messages</p>
      <p begin="00:19:44.090" end="00:19:48.540">and create a and identical table on the server-side that process works</p>
      <p begin="00:19:48.540" end="00:19:51.820">in reverses well so when the server is the sender and</p>
      <p begin="00:19:51.820" end="00:19:54.840">transmitting response there's a separate table</p>
      <p begin="00:19:54.840" end="00:19:59.360">those maintained for this flow and the server then controls what gets</p>
      <p begin="00:19:59.360" end="00:20:05.790">...that table and the client receives those literals and respects and built-in identical table.</p>
      <p begin="00:20:05.790" end="00:20:08.910">This scheme came out of the fact</p>
      <p begin="00:20:08.910" end="00:20:14.210">...previous iterations of protocols they were using a</p>
      <p begin="00:20:14.210" end="00:20:18.630">smaller standard compression scheme ig zip but this is found to be vulnerable</p>
      <p begin="00:20:18.630" end="00:20:23.560">...a crime attack and the value of the hvac is that it's</p>
      <p begin="00:20:23.560" end="00:20:27.320">an efficient protocol it'sa way to get</p>
      <p begin="00:20:27.320" end="00:20:30.890">...of compression but without...vulnerabilities that were in the</p>
      <p begin="00:20:30.890" end="00:20:36.830">...solutions previously.</p>
      <p begin="00:20:36.830" end="00:20:41.410">So, the third major feature here with...hp to server push</p>
      <p begin="00:20:41.410" end="00:20:46.720">...server push does it allows the server to anticipate what the...to ask</p>
      <p begin="00:20:46.720" end="00:20:50.410">for and send them to the client to...warm the cash.</p>
      <p begin="00:20:51.580" end="00:20:56.510">And, this is really useful in this case where I have a lot of static resources</p>
      <p begin="00:20:56.510" end="00:21:00.480">...are part of building a page where I can start sending those back to the</p>
      <p begin="00:21:00.480" end="00:21:05.470">client before the client even asks for them so while I have space in my connection I can</p>
      <p begin="00:21:05.470" end="00:21:09.370">send back resources that I already know the client is going to ask for based on whatever</p>
      <p begin="00:21:09.370" end="00:21:13.210">...his first request was how this works is the</p>
      <p begin="00:21:13.210" end="00:21:17.610">client always starts every connection with the settings frame and they make</p>
      <p begin="00:21:17.610" end="00:21:19.700">...get in side of stream.</p>
      <p begin="00:21:21.260" end="00:21:22.830">Every server push has to</p>
      <p begin="00:21:22.830" end="00:21:27.490">be anchored to a open stream you can't start pushing unless a</p>
      <p begin="00:21:27.490" end="00:21:33.110">...is actually made a request so once the client makes a request.</p>
      <p begin="00:21:33.110" end="00:21:35.630">The server application can then determine the</p>
      <p begin="00:21:35.630" end="00:21:40.350">...this...going to make a bunch of other requests and I want to go ahead</p>
      <p begin="00:21:40.350" end="00:21:44.320">and cinema resources now to make sure that he's going to</p>
      <p begin="00:21:44.320" end="00:21:48.700">get them as fast as possible so the server application can call api</p>
      <p begin="00:21:48.700" end="00:21:50.980">...within windows from is</p>
      <p begin="00:21:50.980" end="00:21:56.380">and from esp dot net that says please push these resources what this doesn't</p>
      <p begin="00:21:56.380" end="00:22:01.360">...windows system is...creates an artificial get and we push that get back up to the application</p>
      <p begin="00:22:01.360" end="00:22:05.190">...sees it just like ...client ask for</p>
      <p begin="00:22:05.190" end="00:22:10.830">an from there that will create within the stack a push promise</p>
      <p begin="00:22:10.830" end="00:22:15.130">...push promises a list of all of the resources that we intend to push</p>
      <p begin="00:22:15.130" end="00:22:19.050">for advertising to the client here's a list of things that we want to push</p>
      <p begin="00:22:19.050" end="00:22:24.100">...this is the list of the server application generated and called</p>
      <p begin="00:22:24.100" end="00:22:28.570">...into esp dot net so we send this message across</p>
      <p begin="00:22:28.570" end="00:22:33.260">the list of all the resources we intend to push and then.</p>
      <p begin="00:22:33.260" end="00:22:36.450">We can begin pushing on the strains each one of</p>
      <p begin="00:22:36.450" end="00:22:41.880">those push promises create a stream in</p>
      <p begin="00:22:41.880" end="00:22:46.450">idol state and then we start to push on them we create</p>
      <p begin="00:22:46.450" end="00:22:53.090">we actually moved into an open state this was from a stream lifecycle a couple of slides ago.</p>
      <p begin="00:22:53.090" end="00:22:57.920">pushing these things then the server can also respond to the initial get in</p>
      <p begin="00:22:57.920" end="00:23:03.080">the same time the main thing is that the server cannot close.</p>
      <p begin="00:23:03.080" end="00:23:04.820">The stream cannot send</p>
      <p begin="00:23:04.820" end="00:23:09.130">...stream until it is done with all the pushes that are anchored to that per</p>
      <p begin="00:23:09.130" end="00:23:13.650">...so it will have to that first get...</p>
      <p begin="00:23:13.650" end="00:23:19.690">first stream has to remain open while the other pushes complete on the client-side with</p>
      <p begin="00:23:19.690" end="00:23:24.130">the server push what happens is the client collects all of the pushes in an in memory</p>
      <p begin="00:23:24.130" end="00:23:28.460">cache they don't push directly into the http cash and then as</p>
      <p begin="00:23:28.460" end="00:23:33.850">we hit the resources we need to acquire in the other code that</p>
      <p begin="00:23:33.850" end="00:23:38.730">ascent say that there are links in htm the index study html</p>
      <p begin="00:23:38.730" end="00:23:43.880">or spx those things are requested their pulled out in memory cache without</p>
      <p begin="00:23:43.880" end="00:23:48.560">...the wire...served back to the client application very quickly and then we go to a normal</p>
      <p begin="00:23:48.560" end="00:23:53.000">cash processing where we can added to the hp cash and we can</p>
      <p begin="00:23:54.170" end="00:23:55.460">...the resources normal</p>
      <p begin="00:23:55.460" end="00:24:05.180">...just as if we were in normal operation we just eliminate the network latency time.</p>
      <p begin="00:24:05.180" end="00:24:10.460">how is...should be to...web applications there are a few ways that we</p>
      <p begin="00:24:10.460" end="00:24:16.540">anticipate the first thing is that when we start to open hanging gets they don't block</p>
      <p begin="00:24:16.540" end="00:24:21.080">connections so we have one connection now we can use it for as many</p>
      <p begin="00:24:21.080" end="00:24:26.510">...resources we'd like to we have this huge number of streams we can open up</p>
      <p begin="00:24:26.510" end="00:24:30.530">we can now send out a get that we don't expect to be fulfilled</p>
      <p begin="00:24:30.530" end="00:24:34.640">for some time and it doesn't block to tcp connection now we can do other things on</p>
      <p begin="00:24:34.640" end="00:24:39.670">that same connection without having to have something just opened in waiting for the</p>
      <p begin="00:24:39.670" end="00:24:46.010">...request to be filled the second thing is that today to increase parallelism a lot of</p>
      <p begin="00:24:46.010" end="00:24:50.560">sites on have shorted their content they've created multiple domains so the</p>
      <p begin="00:24:50.560" end="00:24:53.630">client will create many open connections and we can have lots of</p>
      <p begin="00:24:53.630" end="00:24:56.800">requests and parallel this is no longer necessary with hp</p>
      <p begin="00:24:56.800" end="00:25:01.590">too so where resources are held on the same server</p>
      <p begin="00:25:01.590" end="00:25:07.330">they can now be put into the same domain and then we will get better connection re-use</p>
      <p begin="00:25:07.330" end="00:25:13.530">we won't be flooding the...say with tcp and tls connections?</p>
      <p begin="00:25:13.530" end="00:25:18.220">We have server push and there's going to be lots of different uses for server push the</p>
      <p begin="00:25:18.220" end="00:25:24.860">most basic examples obviously a website that knows wants to push resources based on the first</p>
      <p begin="00:25:24.860" end="00:25:27.930">There will be other uses and we anticipate that</p>
      <p begin="00:25:27.930" end="00:25:32.480">people will come up with lots of creative ways to help their clients make their applications more</p>
      <p begin="00:25:32.480" end="00:25:36.810">efficient faster by using server approach.</p>
      <p begin="00:25:36.810" end="00:25:39.470">There is an opportunity now to use</p>
      <p begin="00:25:39.470" end="00:25:45.260">smaller smaller bits of content no longer does a request and response</p>
      <p begin="00:25:45.260" end="00:25:50.190">...tcp connection where latency will cause us to not send</p>
      <p begin="00:25:50.190" end="00:25:54.340">as much data we can...we can take content and break it up into smaller</p>
      <p begin="00:25:54.340" end="00:25:59.150">chunks that may be more cache mobile than having one large say</p>
      <p begin="00:25:59.150" end="00:26:04.700">inline chunk and by doing...what you're going to do is you're going to enable some</p>
      <p begin="00:26:04.700" end="00:26:08.010">clients to cash resources even proxies or</p>
      <p begin="00:26:08.010" end="00:26:12.640">intermediaries to cash resources more efficiently than they do necessarily</p>
      <p begin="00:26:12.640" end="00:26:17.510">today and therefore will end up with over the long-term less dataset so</p>
      <p begin="00:26:17.510" end="00:26:23.390">this is an opportunity for us to better use the web as it was define.</p>
      <p begin="00:26:23.390" end="00:26:28.900">then lastly you're going to have fewer connections but...be longer...this means a lot less connection</p>
      <p begin="00:26:28.900" end="00:26:32.330">setup time this means a lot less state for maintaining a number of</p>
      <p begin="00:26:32.330" end="00:26:35.930">connections means a better...the network as a whole underneath</p>
      <p begin="00:26:35.930" end="00:26:44.560">us it's a better model for using the actual tcpip protocol.</p>
      <p begin="00:26:44.560" end="00:26:49.580">So, in windows ten how does hp to show up with the original goal that hp</p>
      <p begin="00:26:49.580" end="00:26:55.430">too was useful with existing content with existing applications</p>
      <p begin="00:26:55.430" end="00:26:59.520">and over the existing web...possible implement hp to in a</p>
      <p begin="00:26:59.520" end="00:27:04.500">very transparent way to the application ecosystem so we have implemented</p>
      <p begin="00:27:04.500" end="00:27:09.200">hp to in the when I net client stack and the http.</p>
      <p begin="00:27:09.200" end="00:27:12.810">Server stack and in this way that hp to is</p>
      <p begin="00:27:12.810" end="00:27:16.610">handle completely by windows the operating system itself.</p>
      <p begin="00:27:16.610" end="00:27:20.440">And, then over the top of that we have all on number of application platforms.</p>
      <p begin="00:27:21.520" end="00:27:25.710">And, all of these get http to support automatically spartan,</p>
      <p begin="00:27:25.710" end="00:27:30.540">for example, have hp to support on by default automatically so</p>
      <p begin="00:27:30.540" end="00:27:34.680">when we hit a server that supports a should be to this will get</p>
      <p begin="00:27:34.680" end="00:27:38.110">note negotiated and them the connection will</p>
      <p begin="00:27:38.110" end="00:27:42.840">continuous hp to when botha server and the client support the same thing for</p>
      <p begin="00:27:42.840" end="00:27:48.020">...ww a web view web oc?</p>
      <p begin="00:27:48.020" end="00:27:51.720">The one exception and one of the exceptions in here is the web</p>
      <p begin="00:27:51.720" end="00:27:56.860">of see platform and here because of some of our legacy applications</p>
      <p begin="00:27:56.860" end="00:28:01.350">we have hp to off by default it can be enabled by</p>
      <p begin="00:28:01.350" end="00:28:06.080">registry key so that we can take advantage of it...</p>
      <p begin="00:28:06.080" end="00:28:09.750">if it's appropriate for the application.</p>
      <p begin="00:28:09.750" end="00:28:14.470">Which also in some of the development platforms the windows web dot http?</p>
      <p begin="00:28:14.470" end="00:28:19.130">And,...hr platform...spaces again is on by</p>
      <p begin="00:28:19.130" end="00:28:24.020">...existing application written to these platforms will offer http to</p>
      <p begin="00:28:24.020" end="00:28:25.820">the server automatically</p>
      <p begin="00:28:25.820" end="00:28:29.470">and if the server happens to support fantastic</p>
      <p begin="00:28:29.470" end="00:28:36.950">then will negotiated and we'll use the...in a dot net?</p>
      <p begin="00:28:36.950" end="00:28:41.780">We're working now to try and include http to support for the</p>
      <p begin="00:28:41.780" end="00:28:47.470">windows ten store applications and we're hoping that we'll be able to bring this</p>
      <p begin="00:28:47.470" end="00:28:51.890">in the short-term with windows ten.</p>
      <p begin="00:28:51.890" end="00:28:56.880">We want to...in basically the same way where the application doesn't have to do anything special</p>
      <p begin="00:28:56.880" end="00:29:02.320">they just get it automatically and they can take advantage of the protocol and,</p>
      <p begin="00:29:02.320" end="00:29:05.530">also in for a applications...specifically use</p>
      <p begin="00:29:05.530" end="00:29:14.040">hp too and some of the advantages of it those things will be available as well.</p>
      <p begin="00:29:14.040" end="00:29:15.570">There on the server-side</p>
      <p begin="00:29:15.570" end="00:29:20.240">...to support being built...automatically I ask</p>
      <p begin="00:29:20.240" end="00:29:23.260">...automatically and esp dot net applications</p>
      <p begin="00:29:23.260" end="00:29:26.510">...an automatically the exception to that is with</p>
      <p begin="00:29:26.510" end="00:29:31.850">...dot net if we want to do server push from the from the application</p>
      <p begin="00:29:31.850" end="00:29:35.960">on the server-side they will actually have to identify the resources and</p>
      <p begin="00:29:35.960" end="00:29:40.290">...new code to indicate to the stack what they want to push</p>
      <p begin="00:29:40.290" end="00:29:43.700">is a change is not a huge change to</p>
      <p begin="00:29:43.700" end="00:29:49.010">...application but it is a new model of deliver the content.</p>
      <p begin="00:29:49.010" end="00:29:54.150">...places where we're not going to have hp to support by default the first one</p>
      <p begin="00:29:54.150" end="00:29:59.140">is in when http so is not going to be available in when http in windows</p>
      <p begin="00:29:59.140" end="00:30:03.860">ted is something that will be working on for future releases and then the other</p>
      <p begin="00:30:03.860" end="00:30:09.660">place is inlegacy web platform application so things that</p>
      <p begin="00:30:09.660" end="00:30:14.760">use some of our legacy platforms are not going to get hp to support automatically</p>
      <p begin="00:30:14.760" end="00:30:18.060">and, this is just basically a sense of focus for us we</p>
      <p begin="00:30:18.060" end="00:30:23.070">want to work on the highly hit the main use platforms and things like the ie</p>
      <p begin="00:30:23.070" end="00:30:27.410">in the spartan or the windows dot web dot http.</p>
      <p begin="00:30:27.410" end="00:30:30.270">Also there's another session here on</p>
      <p begin="00:30:30.270" end="00:30:35.600">do networking development platforms and they're going to cover specifically how-to</p>
      <p begin="00:30:35.600" end="00:30:44.750">enabling use http when needed so I highly recommend that talk as well?</p>
      <p begin="00:30:44.750" end="00:30:49.730">So, where do we go from herethe biggest thing grab...tryout</p>
      <p begin="00:30:49.730" end="00:30:54.370">http to your existing applications like we talked about your existing sites they</p>
      <p begin="00:30:54.370" end="00:30:58.830">should be able to take advantage of hp to you can go ahead and grab the server</p>
      <p begin="00:30:58.830" end="00:31:03.060">you can install your site on top of windows ten server and hp to support will be</p>
      <p begin="00:31:03.060" end="00:31:06.530">on by default and available to any klein who asks</p>
      <p begin="00:31:06.530" end="00:31:12.060">for it you can test it and make sure that the promise of hp to the better performance</p>
      <p begin="00:31:12.060" end="00:31:15.860">works with your content take your applications common</p>
      <p begin="00:31:15.860" end="00:31:18.980">...for the windows ten store in which case you will get</p>
      <p begin="00:31:18.980" end="00:31:23.920">hp to support automatically again try them out see how they works the other work with...</p>
      <p begin="00:31:23.920" end="00:31:33.640">services that are advertising http to support...a lot that are and development now?</p>
      <p begin="00:31:33.640" end="00:31:42.770">Give us feedback where we're open were looking forward to having as use...platform?</p>
      <p begin="00:31:42.770" end="00:31:44.410">Thank you very much.</p>

    </div>
  </body>
</tt>