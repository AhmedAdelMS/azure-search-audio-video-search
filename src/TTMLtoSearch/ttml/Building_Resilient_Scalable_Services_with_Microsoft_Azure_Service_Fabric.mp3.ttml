<?xml version="1.0" encoding="utf-8"?>
<tt xml:lang="en-us" xmlns="http://www.w3.org/ns/ttml" xmlns:tts="http://www.w3.org/ns/ttml#styling" xmlns:ttm="http://www.w3.org/ns/ttml#metadata">
  <head>
    <metadata>
      <ttm:title>Media.wvx.aib</ttm:title>
      <ttm:copyright>Copyright (c) 2013 Microsoft Corporation.  All rights reserved.</ttm:copyright>
    </metadata>
    <styling>
      <style xml:id="Style1" tts:fontFamily="proportionalSansSerif" tts:fontSize="0.8c" tts:textAlign="center" tts:color="white" />
    </styling>
    <layout>
      <region style="Style1" xml:id="CaptionArea" tts:origin="0c 12.6c" tts:extent="32c 2.4c" tts:backgroundColor="rgba(0,0,0,160)" tts:displayAlign="center" tts:padding="0.3c 0.5c" />
    </layout>
    <recognizability>0.880</recognizability>
  </head>
  <body region="CaptionArea">
    <div>
      <p begin="00:00:05.070" end="00:00:11.240">Good afternoon well, hooters talk my name's mark...I'm a program manager works on the</p>
      <p begin="00:00:11.240" end="00:00:17.590">...service fabric team hi I'm google more the mone of engineering managers on the service</p>
      <p begin="00:00:17.590" end="00:00:22.100">fabricating so today we're going to talk to-you about how you can build a</p>
      <p begin="00:00:22.100" end="00:00:26.750">scalable resilient services using the program model apis</p>
      <p begin="00:00:26.750" end="00:00:30.350">...tobin encourage you to download and su cui that we ship this week</p>
      <p begin="00:00:30.350" end="00:00:32.390">use sdk and you'll see it into this talking</p>
      <p begin="00:00:32.390" end="00:00:38.640">...build yourself the same scalable applications will show but plenty demos here today.</p>
      <p begin="00:00:38.640" end="00:00:42.500">I'm going to touch a little bit on the benefits of why we build service fabric</p>
      <p begin="00:00:42.500" end="00:00:47.440">is a platform has been the vast majority of time thinking about how we builders applications and</p>
      <p begin="00:00:47.440" end="00:00:52.200">...inside visual studio and show you code we...the rise per program moles we have</p>
      <p begin="00:00:52.200" end="00:00:57.850">...imitators applications...how you can simply scalable out.</p>
      <p begin="00:00:57.850" end="00:01:00.450">If any of you attended a gopal...told yesterday</p>
      <p begin="00:01:00.450" end="00:01:06.050">gave great run-down of why we built a platform for buildingservices that we</p>
      <p begin="00:01:06.050" end="00:01:11.290">...microsoft here leisure we've always been focused on building a platform itself, you know, when we first...a</p>
      <p begin="00:01:11.290" end="00:01:15.930">...on building this concept of work rules and web rules could we realize that building...role the m</p>
      <p begin="00:01:15.930" end="00:01:20.730">is just hard, you know, you can't just build...your machine fails what was running on it how do I</p>
      <p begin="00:01:20.730" end="00:01:23.750">fail it all over...of my service so you</p>
      <p begin="00:01:23.750" end="00:01:28.650">build services you need a platform to take that hard work away from you and we're microsoft</p>
      <p begin="00:01:28.650" end="00:01:33.630">have been doing exactly the same transition for a number of years we've taken a lot of box products we built before</p>
      <p begin="00:01:33.630" end="00:01:38.660">sequel...a system center your ling...sky for business and we've been hosting them...services...the</p>
      <p begin="00:01:38.660" end="00:01:43.640">cloud we realized we did that we had to build a new platform...with thrills</p>
      <p begin="00:01:43.640" end="00:01:49.200">we'll say that after many years of development we've actually kind of get this platform...think this is...next generation of</p>
      <p begin="00:01:49.200" end="00:01:53.550">has a platform...giving you we used to build and run our own services on</p>
      <p begin="00:01:54.730" end="00:01:59.190">...reasons why we have to do this and the most important came across as we building services we realized we had the</p>
      <p begin="00:01:59.190" end="00:02:04.060">breakdown...applications into the concept of micros services pieces of code that</p>
      <p begin="00:02:04.060" end="00:02:09.220">...independently deployable version of all...had unique names and</p>
      <p begin="00:02:09.220" end="00:02:15.290">regrettable and here let's take...reasons why?</p>
      <p begin="00:02:15.290" end="00:02:20.450">The first and foremost...when you build...service scalers unpredictable you might sort of...machines you might get to</p>
      <p begin="00:02:20.450" end="00:02:25.510">thirty...might go to three hundred machines you don't...to build re architecture app constantly because of the</p>
      <p begin="00:02:25.510" end="00:02:28.490">scaled...for they...scale down.</p>
      <p begin="00:02:28.490" end="00:02:31.540">You secondly...concept of agility we...years of</p>
      <p begin="00:02:31.540" end="00:02:36.280">...engineering team building a big box product we ship that every few years in all engineers are</p>
      <p begin="00:02:36.280" end="00:02:40.440">focused on that as you run a service...become much more agile...how</p>
      <p begin="00:02:40.440" end="00:02:45.340">to fundamental changes id engineering teams at microsoft sql leisure teams,</p>
      <p begin="00:02:45.340" end="00:02:48.300">for example, change from focusing on bookwork features for</p>
      <p begin="00:02:48.300" end="00:02:53.040">develop style they run a service now and not meant they had to...individual</p>
      <p begin="00:02:53.040" end="00:02:56.830">teams...to ship...deploy individual pieces at different times so,</p>
      <p begin="00:02:56.830" end="00:03:01.060">for example, when you see collages a team ability database microsoft as a...the</p>
      <p begin="00:03:01.060" end="00:03:05.890">...the protocol gateway services team that...the backup and restore...</p>
      <p begin="00:03:05.890" end="00:03:10.210">and each one of them has...and their own scheduler their own time frame they couldn't wait for each other</p>
      <p begin="00:03:10.210" end="00:03:15.200">there's a lot more agility and getting their things rolled out new functionality fixing bugs</p>
      <p begin="00:03:15.200" end="00:03:20.400">and each one of those had...across a set of machines had...versioning the deployment and the</p>
      <p begin="00:03:20.400" end="00:03:25.630">...all those mexico's came resilience...important</p>
      <p begin="00:03:25.630" end="00:03:29.700">...have when you're running a scales of machine running hundred machines what</p>
      <p begin="00:03:29.700" end="00:03:35.670">a single machine fails you can't just simply go what was on that machine hardware...machine how do I</p>
      <p begin="00:03:35.670" end="00:03:40.180">...the services running inside the machine you have to be able to deal with automatic fail over</p>
      <p begin="00:03:40.180" end="00:03:45.290">...do a self healing of the service itself...say a little machine fail I just</p>
      <p begin="00:03:45.290" end="00:03:49.580">when you service fabric the underlying platform to take care or making sure that those</p>
      <p begin="00:03:49.580" end="00:03:52.860">serves it redistribute against the remaining soda machines at</p>
      <p begin="00:03:52.860" end="00:03:59.670">run then of course came cost if you look at the cloud services today...</p>
      <p begin="00:03:59.670" end="00:04:05.600">up five work...you...been...m and placement process...why can't I just run,</p>
      <p begin="00:04:05.600" end="00:04:06.090">you know,</p>
      <p begin="00:04:06.090" end="00:04:11.100">all these different work roles on the same, you know, smaller number...well this is exactly will service fabric does</p>
      <p begin="00:04:11.100" end="00:04:15.420">we break things down is micros services and we can deploy hundreds of micros services</p>
      <p begin="00:04:15.420" end="00:04:20.090">onto a small set of the m...sort of three and go-to...to three hundred so we can packing</p>
      <p begin="00:04:20.090" end="00:04:25.420">densities and helps reduce costs when you start to run these services a scale...becomes</p>
      <p begin="00:04:25.420" end="00:04:30.550">a very important factor so all of this drove us to build a platform we uses</p>
      <p begin="00:04:30.550" end="00:04:34.540">...services the bits that we gave out yesterday exactly the same bits that we run inside out</p>
      <p begin="00:04:34.540" end="00:04:39.160">datacenters in fact we just cut the for release what we should...few days</p>
      <p begin="00:04:39.160" end="00:04:43.460">...actual for releases still being rolled out inside offers...services</p>
      <p begin="00:04:43.460" end="00:04:48.510">...get before and what teams of deployed we sort of frills...say that when you take this and deployed on your</p>
      <p begin="00:04:48.510" end="00:04:52.950">machines...the same code that we use inside...services</p>
      <p begin="00:04:52.950" end="00:04:57.680">and even more so our objective is that we're taking this platform...only will you builds</p>
      <p begin="00:04:57.680" end="00:05:02.650">a take...applications that you...against this sdk and...service...run inside as</p>
      <p begin="00:05:02.650" end="00:05:07.610">your but...putting the same platform directly...windows...twenty sixteen</p>
      <p begin="00:05:07.610" end="00:05:11.600">what that means is that you build...applications you can...insider</p>
      <p begin="00:05:11.600" end="00:05:17.330">...with no code changes...cluster machines on windows server and you can...your private clouds</p>
      <p begin="00:05:17.330" end="00:05:22.360">you...anywhere by windows have a twenty sixties running of course beyond that</p>
      <p begin="00:05:22.360" end="00:05:26.760">we're also looking how we pull the whole platform with a linux and...on a of</p>
      <p begin="00:05:26.760" end="00:05:31.270">os of your choice so now you...say to choose the always have your choice and you build a</p>
      <p begin="00:05:31.270" end="00:05:35.460">played to the location of your choice of course the whole platform is designed</p>
      <p begin="00:05:35.460" end="00:05:39.530">...you feasibility apis we provide...bring your own runtime about how you</p>
      <p begin="00:05:39.530" end="00:05:42.850">...as well as incredibly flexible and we're very excited</p>
      <p begin="00:05:42.850" end="00:05:48.990">...say this is the way that we think about how you should build scalable resilient applications?</p>
      <p begin="00:05:48.990" end="00:05:52.850">So, let me get just a few concepts and place because understanding a few of these concepts</p>
      <p begin="00:05:52.850" end="00:05:57.260">object really appreciate and understand the demos that we're going to run through.</p>
      <p begin="00:05:57.260" end="00:06:02.010">...we talk about a cluster what this does is we take a set of machines physical</p>
      <p begin="00:06:02.010" end="00:06:06.890">machines or...m and we stitching together from a cluster machines and this cluster can</p>
      <p begin="00:06:06.890" end="00:06:11.380">be scalable from three had machines to xxx machines to three hundred machines kind of interface get</p>
      <p begin="00:06:11.380" end="00:06:15.800">...scale-up and can scale it out consists of machines of different sizes</p>
      <p begin="00:06:15.800" end="00:06:19.140">...because you can think of this is a collection as a whole?</p>
      <p begin="00:06:19.140" end="00:06:23.870">What happens then is that you come along and you define and build an application that consists</p>
      <p begin="00:06:23.870" end="00:06:28.490">of micros services pieces of code that you can decomposing your applications using very</p>
      <p begin="00:06:28.490" end="00:06:34.580">much about design in terms of components ionization of your application what happens</p>
      <p begin="00:06:34.580" end="00:06:39.000">then...application which is sort of a logical collection of these services you bill many of them</p>
      <p begin="00:06:39.000" end="00:06:43.810">and you simply say to service fabric deploy this application into the...containing microwaves</p>
      <p begin="00:06:43.810" end="00:06:47.550">...distribute across the set of cluster machines in most efficient</p>
      <p begin="00:06:47.550" end="00:06:51.860">way we understand resources of the actual micros service that uses</p>
      <p begin="00:06:51.860" end="00:06:57.310">...resources of the machines we just moved to the most efficient placement around all that?</p>
      <p begin="00:06:57.310" end="00:07:01.680">Of course what can happen typically you deploys micros services...machines</p>
      <p begin="00:07:01.680" end="00:07:06.240">...we're all about resilience and failure and it's a thing to have in a distributed system,</p>
      <p begin="00:07:06.240" end="00:07:11.620">you know, there are machines that will die you...visibility of having canonicalization of hardware</p>
      <p begin="00:07:11.620" end="00:07:14.810">...have cheap commercialization of hardware where you have one of know</p>
      <p begin="00:07:14.810" end="00:07:17.540">...failures are not going to bring down your service will</p>
      <p begin="00:07:17.540" end="00:07:22.430">invested case we simply go how we understand exactly what was running that we knew exactly the microsoft</p>
      <p begin="00:07:22.430" end="00:07:27.150">as with that whether we simply look how we redistribute them around the remaining set of</p>
      <p begin="00:07:27.150" end="00:07:30.770">...machines inside the cluster as far as you're concerned or this transparent</p>
      <p begin="00:07:30.770" end="00:07:35.220">...make sure they have constant high availability resilience in your service this is how</p>
      <p begin="00:07:35.220" end="00:07:39.630">we build large-scale mission critical services that we run on like sequel</p>
      <p begin="00:07:39.630" end="00:07:44.630">...databases document db event hubs in...here this</p>
      <p begin="00:07:44.630" end="00:07:49.770">is a critical part of how we make sure that there's a full resilience inside a</p>
      <p begin="00:07:49.770" end="00:07:54.850">...of...clusters well can span multiple datacenters or multiple regions</p>
      <p begin="00:07:54.850" end="00:08:00.120">...provide resilience beyond the bounds all of, you know, just a singleand,</p>
      <p begin="00:08:00.120" end="00:08:04.550">region itself and in fact if you take one of...services we run which is the back-end of</p>
      <p begin="00:08:04.550" end="00:08:10.850">...they spread out across three different being datacenters...they run this.</p>
      <p begin="00:08:10.850" end="00:08:12.080">So, given a little bit</p>
      <p begin="00:08:12.080" end="00:08:16.880">of background about the concepts let's talk about what you can actually build what we do is</p>
      <p begin="00:08:16.880" end="00:08:21.930">we split applications into typically to types we talk about stateless services we talk about</p>
      <p begin="00:08:21.930" end="00:08:27.180">stateful services stainless ones are something that you're...almost exactly familiar with today</p>
      <p begin="00:08:27.180" end="00:08:32.250">...of the things like cloud services...worker roles isp dot net applications</p>
      <p begin="00:08:32.250" end="00:08:36.390">...gets external...is some stole with us as your storage all</p>
      <p begin="00:08:36.390" end="00:08:41.240">sequel databases and typically when not piece of code starts...a positive from the</p>
      <p begin="00:08:41.240" end="00:08:46.140">store and does is computation on it and if that particular service goes down...instantiated</p>
      <p begin="00:08:46.140" end="00:08:52.230">somewhere else...data...one of the great innovations...enormous innovation we have a</p>
      <p begin="00:08:52.230" end="00:08:57.830">force to build was concept of stateful services and stateful services have</p>
      <p begin="00:08:57.830" end="00:09:02.920">to huge benefits one is that...reduce latency?</p>
      <p begin="00:09:02.920" end="00:09:07.450">What that means is when request coming from your client the state...your code</p>
      <p begin="00:09:07.450" end="00:09:11.270">...co-located together we take the state of your application the data</p>
      <p begin="00:09:11.270" end="00:09:15.980">...it highly resilience by a persisting at low clear making replica copies of it scenario</p>
      <p begin="00:09:15.980" end="00:09:19.060">compute and state...co-located together that reduces</p>
      <p begin="00:09:19.060" end="00:09:25.010">latency enormously so you don't have to go to some back...back secondly and critically is a</p>
      <p begin="00:09:25.010" end="00:09:29.960">...service actually reduce the complexity replication when you start to think about stateful</p>
      <p begin="00:09:29.960" end="00:09:34.890">services a starting about designs today I'm almost certain that you built applications</p>
      <p begin="00:09:34.890" end="00:09:39.270">and services today request comes in from a client it goes into a q you pull it out from the</p>
      <p begin="00:09:39.270" end="00:09:43.480">q and you put into your work role and then from that work role impressions some</p>
      <p begin="00:09:43.480" end="00:09:48.650">...install and it's really pretty have some caches...improve the related...back</p>
      <p begin="00:09:48.650" end="00:09:55.590">...well one of the key aspects of stateful services is what we've effect redone we've democratizing</p>
      <p begin="00:09:55.590" end="00:10:00.180">okay we've given high availability to all of you as part of probing model a simple</p>
      <p begin="00:10:00.180" end="00:10:05.080">...or that means now is you can get rid of those externalities...and get rid of those</p>
      <p begin="00:10:05.080" end="00:10:09.820">x analyze caches because your application is naturally highly resilience you don't need to have a q</p>
      <p begin="00:10:09.820" end="00:10:14.800">...your application is naturally a cache the dangers simply the data</p>
      <p begin="00:10:14.800" end="00:10:19.700">...is made resilience and replicated across a set of...already...in the middle</p>
      <p begin="00:10:19.700" end="00:10:25.190">tier you run your code so deeply simplifies how we do these things</p>
      <p begin="00:10:25.190" end="00:10:30.560">an example a back-end of kona where you run ...across</p>
      <p begin="00:10:30.560" end="00:10:35.150">...set of cluster...machines they built a stateful service that gives run</p>
      <p begin="00:10:35.150" end="00:10:39.700">...about a thousand instances or more of the microsoft they run and</p>
      <p begin="00:10:39.700" end="00:10:43.610">...as a query engine...does it has a number of subscriptions</p>
      <p begin="00:10:43.610" end="00:10:48.580">runs link queries across incoming data feeds so lots and lots of data is coming</p>
      <p begin="00:10:48.580" end="00:10:52.740">from the traffic is coming from finance coming from whether they</p>
      <p begin="00:10:52.740" end="00:10:57.960">have huge numbers of the microsoft is run they have a query expression they evaluate</p>
      <p begin="00:10:57.960" end="00:11:02.610">billionsmillions of these query expressions across a partition set of services</p>
      <p begin="00:11:02.610" end="00:11:07.150">and any time there's a failure one of those machines always query expressions</p>
      <p begin="00:11:07.150" end="00:11:12.140">...across another to another services running as you get very fast fail</p>
      <p begin="00:11:12.140" end="00:11:13.580">...this example of the stateful</p>
      <p begin="00:11:13.580" end="00:11:18.040">less they have fast fail over where they can actually do query expressions</p>
      <p begin="00:11:18.040" end="00:11:20.760">...incoming data and when they hit...career expressions,</p>
      <p begin="00:11:20.760" end="00:11:25.120">for example,...your gps location and tell me whether the traffic alert they</p>
      <p begin="00:11:25.120" end="00:11:29.780">...visual notification if they...to build-out as a stateless service putting a lot data</p>
      <p begin="00:11:29.780" end="00:11:35.880">...running always rules...eventu the failure the failure...subscriptions would give you a</p>
      <p begin="00:11:35.880" end="00:11:39.010">...slow experience for you to be a have a</p>
      <p begin="00:11:39.010" end="00:11:41.330">...responsive time in terms of making sure you</p>
      <p begin="00:11:41.330" end="00:11:47.570">have notifications about what happens and finally we provides runtime that allows you to build status</p>
      <p begin="00:11:47.570" end="00:11:51.510">and stateful services but of course we can to completely embrace any other runtime you want to</p>
      <p begin="00:11:51.510" end="00:11:54.960">deploy in terms of what we call a micros service with you some</p>
      <p begin="00:11:54.960" end="00:12:00.070">new js or whether you use an arbitrary axial deploy that will make it free resilient</p>
      <p begin="00:12:00.070" end="00:12:05.240">...copies of it running and one of the machines failed will make sure that always running somewhere so you can bring your own</p>
      <p begin="00:12:05.240" end="00:12:09.310">run...combine that with our runtime and typically what</p>
      <p begin="00:12:09.310" end="00:12:13.150">we find is that many applications consists of some statefull some</p>
      <p begin="00:12:13.150" end="00:12:16.780">stinger services and different runtime in all this compose together and</p>
      <p begin="00:12:16.780" end="00:12:22.840">manage as a single entity a across the service fabric?</p>
      <p begin="00:12:22.840" end="00:12:27.110">So, how is it you can...some of these things so effectively have to</p>
      <p begin="00:12:27.110" end="00:12:31.600">...model apis one that we call reliable actors and one of recall reliable</p>
      <p begin="00:12:31.600" end="00:12:36.590">services and both of them take advantage of the full platform capabilities</p>
      <p begin="00:12:36.590" end="00:12:40.990">and using either...api you can build micros services and be able</p>
      <p begin="00:12:40.990" end="00:12:45.790">to compose replications from those and typically we find that many application we have</p>
      <p begin="00:12:45.790" end="00:12:51.520">compose from both...models in terms of how they...this whichever you choose</p>
      <p begin="00:12:51.520" end="00:12:55.560">...of the full platform underneath it all trying to do is</p>
      <p begin="00:12:57.230" end="00:13:01.880">...of ripple he's going to talk us through but some of the launches warning means by access</p>
      <p begin="00:13:01.880" end="00:13:06.950">...so everyone so...reliable</p>
      <p begin="00:13:06.950" end="00:13:12.180">...basically allows you to...hardness the full our of service fabric by</p>
      <p begin="00:13:12.180" end="00:13:16.930">using very simple programming modeler to virtual activist programming model</p>
      <p begin="00:13:16.930" end="00:13:21.740">it suitable for like coyote or games where you can actually divide</p>
      <p begin="00:13:21.740" end="00:13:27.200">your state as well as logic into very small independent units and they can all run and,</p>
      <p begin="00:13:27.200" end="00:13:31.960">run in parallel the runtime provides you basically automatic state management</p>
      <p begin="00:13:31.960" end="00:13:36.830">as well as it provides a very simple...concurrency what it means that you</p>
      <p begin="00:13:36.830" end="00:13:41.260">don't have to write complicated synchronization logic you do not have to write complicated</p>
      <p begin="00:13:41.260" end="00:13:44.160">...to save your state to some back-end database and make</p>
      <p begin="00:13:44.160" end="00:13:49.980">it reliable the platform takes care of takes care of that for-you so,</p>
      <p begin="00:13:49.980" end="00:13:54.770">now let's go ahead then and look at building</p>
      <p begin="00:13:54.770" end="00:14:00.580">...reliable actor we'll start with stateless reliable actor and then we'll go and make it make</p>
      <p begin="00:14:00.580" end="00:14:09.420">the state more reliable so I'm going to switch over to visual studio?</p>
      <p begin="00:14:09.420" end="00:14:15.340">So, you notice in...we have done a full integration with visual studio of a new</p>
      <p begin="00:14:15.340" end="00:14:20.000">create a new project you'll see the templates which are basically you can create services using</p>
      <p begin="00:14:20.000" end="00:14:25.340">...you can create services using the...allowable services programming model so,</p>
      <p begin="00:14:25.340" end="00:14:28.960">here I already created a project we're using this</p>
      <p begin="00:14:28.960" end="00:14:33.440">template which is the stateless active service in this case my actor is</p>
      <p begin="00:14:33.440" end="00:14:38.260">a so there are there are three things that you need to do in order to build a reliable actor</p>
      <p begin="00:14:38.260" end="00:14:43.580">...you define the interface...just like objects so,</p>
      <p begin="00:14:43.580" end="00:14:46.760">you define an interface in this case I'm defining a counteract</p>
      <p begin="00:14:46.760" end="00:14:51.560">interface it obviously has a certain method in order to set the...</p>
      <p begin="00:14:51.560" end="00:14:57.040">and get method to get the...or more appropriate set method which is a compare</p>
      <p begin="00:14:57.040" end="00:15:01.990">an exchange method right so that's the first thing that you do the second thing is that</p>
      <p begin="00:15:01.990" end="00:15:07.220">we have to go and implement...so, you go ahead and implement the counterso,</p>
      <p begin="00:15:07.220" end="00:15:10.460">in this caseI'm implementing the count of the value</p>
      <p begin="00:15:10.460" end="00:15:15.440">...stored in a member variable so you derived from an actor and then you implement</p>
      <p begin="00:15:15.440" end="00:15:19.930">your actor interface and the compare exchanges doing a normal compare</p>
      <p begin="00:15:19.930" end="00:15:24.420">exchange...look at this course in this scored we have not</p>
      <p begin="00:15:24.420" end="00:15:27.870">written any synchronization logic we have not written any management</p>
      <p begin="00:15:27.870" end="00:15:32.590">state management logic activation logic nothing of that sort right so very simple</p>
      <p begin="00:15:32.590" end="00:15:37.510">...it's like any other any of the plastic you would write.</p>
      <p begin="00:15:37.510" end="00:15:42.460">The third thing that you need to do is to basically register the actor</p>
      <p begin="00:15:42.460" end="00:15:47.530">with the runtime so that runtime can activated as needed so,</p>
      <p begin="00:15:47.530" end="00:15:52.730">here I create a fabric runtime...just...the actor which is my actor and,</p>
      <p begin="00:15:52.730" end="00:15:56.000">I rate for the activation stew to happen so,</p>
      <p begin="00:15:56.000" end="00:16:02.050">let's go ahead and are deployed this active solution into</p>
      <p begin="00:16:02.050" end="00:16:09.330">...actor application into one of the local cluster that we how you'll see that so,</p>
      <p begin="00:16:09.330" end="00:16:13.840">while it is deploying let's go ahead and look at how would you actually use the actor</p>
      <p begin="00:16:13.840" end="00:16:19.840">in order to use the actor you connect to it through what we call an actor</p>
      <p begin="00:16:19.840" end="00:16:24.550">...proxy provides location transparency it allows you to</p>
      <p begin="00:16:24.550" end="00:16:29.680">identify the actor using the actor id and, you can identify</p>
      <p begin="00:16:29.680" end="00:16:34.860">that...either through all a string identifier all you can use</p>
      <p begin="00:16:34.860" end="00:16:37.390">along or you can use a good so,</p>
      <p begin="00:16:37.390" end="00:16:42.070">you say I want to connect to account director in this case counter one and,</p>
      <p begin="00:16:42.070" end="00:16:44.730">you create a proxy to it so,</p>
      <p begin="00:16:44.730" end="00:16:49.420">now the active roxy will provide location transparency you will connect to the right</p>
      <p begin="00:16:49.420" end="00:16:53.770">...will dispatcher method if let's say that...to fail</p>
      <p begin="00:16:53.770" end="00:16:58.280">and the runtime were to re instantiated somewhere else it will transparently reconnect</p>
      <p begin="00:16:58.280" end="00:17:04.090">and your calls will go through you would not have to handle any fail over logic whatsoever so,</p>
      <p begin="00:17:04.090" end="00:17:08.350">in this case what I'm doing is that ...just get the counter</p>
      <p begin="00:17:08.350" end="00:17:13.190">value current counter value and then I increment the counter value by adding</p>
      <p begin="00:17:13.190" end="00:17:17.700">one-two it right now let's see what is deployed in</p>
      <p begin="00:17:17.700" end="00:17:23.140">the cluster so this is my local cluster it's running on this laptop it's running</p>
      <p begin="00:17:23.140" end="00:17:28.400">find nodes on this laptop and it's running the exactly the same</p>
      <p begin="00:17:28.400" end="00:17:33.120">...as it would run in the datacenter...there is no difference this is one of</p>
      <p begin="00:17:33.120" end="00:17:36.950">theone of the big difference with respect to the previous cloud services</p>
      <p begin="00:17:36.950" end="00:17:40.300">vibration and this whereas up in the previous cloud services</p>
      <p begin="00:17:40.300" end="00:17:44.550">that was an emulator here there is no emulator it is exactly the same core so</p>
      <p begin="00:17:44.550" end="00:17:47.210">if you record runs on your machine you know,</p>
      <p begin="00:17:47.210" end="00:17:51.830">that yes it will actually run in the production environment as well?</p>
      <p begin="00:17:51.830" end="00:17:58.280">So, I have final cluster let's see the application is deplore this is a counter</p>
      <p begin="00:17:58.280" end="00:18:01.830">application.</p>
      <p begin="00:18:01.830" end="00:18:05.210">And, it contains one count of service so,</p>
      <p begin="00:18:05.210" end="00:18:09.640">here is here is the application of this is the service it</p>
      <p begin="00:18:09.640" end="00:18:14.360">has one partition...right and that partition is running on node</p>
      <p begin="00:18:14.360" end="00:18:19.990">four right so let's go ahead look at on nor for.</p>
      <p begin="00:18:19.990" end="00:18:24.870">What is running for node for you can see that we have over counter</p>
      <p begin="00:18:24.870" end="00:18:28.940">...running on node four?</p>
      <p begin="00:18:28.940" end="00:18:32.910">And, it has one instance placed in that knownso,</p>
      <p begin="00:18:32.910" end="00:18:47.530">now I'm going to go back and run the client.</p>
      <p begin="00:18:47.530" end="00:18:52.290">So, the client disconnected to the actor through that roxy as we saw in the</p>
      <p begin="00:18:52.290" end="00:18:55.540">...basically incrementing the counter right.</p>
      <p begin="00:18:55.540" end="00:19:00.050">So,...I'm going to put this to refresh.</p>
      <p begin="00:19:00.050" end="00:19:04.540">So, you see what happens the counter is actually on node</p>
      <p begin="00:19:04.540" end="00:19:06.510">...go ahead and</p>
      <p begin="00:19:06.510" end="00:19:15.750">...the...on...four.</p>
      <p begin="00:19:15.750" end="00:19:21.930">You saw that the system to fill overreaction.</p>
      <p begin="00:19:21.930" end="00:19:25.670">That...transparently reconnected the client</p>
      <p begin="00:19:25.670" end="00:19:30.990">...another instantiation of the actor and.</p>
      <p begin="00:19:30.990" end="00:19:34.960">Well, we lost our work on so we lost</p>
      <p begin="00:19:34.960" end="00:19:40.710">...stared which was which was expected because we were storing the</p>
      <p begin="00:19:40.710" end="00:19:43.690">...in a member variable right so we made</p>
      <p begin="00:19:43.690" end="00:19:47.480">...reliable...but we didn't make the state reliableso,</p>
      <p begin="00:19:47.480" end="00:19:52.680">let's go ahead and look at how can we make this state more reliable right?</p>
      <p begin="00:19:52.680" end="00:19:57.250">...stalled the client.</p>
      <p begin="00:19:57.250" end="00:20:02.300">...exactly example of...we got from a state disservice...failure and recover</p>
      <p begin="00:20:02.300" end="00:20:07.190">...recovered my state fromeither from the beginning because the computational because I pulled from some</p>
      <p begin="00:20:07.190" end="00:20:12.310">...lifestyle right so I'll go back to over counteract implementation so,</p>
      <p begin="00:20:12.310" end="00:20:17.160">in order to make ...stateful reliable actor you need to define the</p>
      <p begin="00:20:17.160" end="00:20:21.210">state you can define any state that is utilize herbal so,</p>
      <p begin="00:20:21.210" end="00:20:23.160">in this case of define account</p>
      <p begin="00:20:23.160" end="00:20:28.600">...which contains value for the counter now rather than deriving from the</p>
      <p begin="00:20:28.600" end="00:20:36.320">actor of actor you will derive from actor of the...in this case it's count of state.</p>
      <p begin="00:20:36.320" end="00:20:39.120">Right now that we have derived from</p>
      <p begin="00:20:39.120" end="00:20:44.700">...from a stateful actor we do not need to store the member variables so...common</p>
      <p begin="00:20:44.700" end="00:20:50.620">this out now I need to get this value.</p>
      <p begin="00:20:50.620" end="00:20:53.350">From a base state property.</p>
      <p begin="00:20:53.350" end="00:20:56.740">This property is the reliable state so when an</p>
      <p begin="00:20:56.740" end="00:21:01.470">actor is instantiated we hydrated this property with the</p>
      <p begin="00:21:01.470" end="00:21:05.830">last consistent value if you make changes to this property when your method returns</p>
      <p begin="00:21:05.830" end="00:21:09.830">it automatically get saved so this is the automatic state management that I</p>
      <p begin="00:21:09.830" end="00:21:19.280">was talking about so let me go ahead and modify all of this scored.</p>
      <p begin="00:21:19.280" end="00:21:22.240">So, what you'll see in the beauty of all of this is now the states contained</p>
      <p begin="00:21:22.240" end="00:21:25.730">is a stateful service and...do the failure again use</p>
      <p begin="00:21:25.730" end="00:21:30.700">...completely different experience right so again as you saw that I</p>
      <p begin="00:21:30.700" end="00:21:35.500">did not write any synchronization logic here that...on currencies providing</p>
      <p begin="00:21:36.680" end="00:21:40.810">what provided by the runtime is taking care of the synchronization for</p>
      <p begin="00:21:40.810" end="00:21:45.180">...so whenever any of these methods are in progress is guaranteed that</p>
      <p begin="00:21:45.180" end="00:21:50.020">...method is being called so you can make changes to your state are just like as you would in</p>
      <p begin="00:21:50.020" end="00:21:54.180">...normal dot net class without worrying about concurrency</p>
      <p begin="00:21:54.180" end="00:21:58.310">and once so in the search method when we said the value of</p>
      <p begin="00:21:58.310" end="00:22:03.290">the state ones the method returns the state will be replicated...and replica</p>
      <p begin="00:22:03.290" end="00:22:07.340">...and, quorum committed so let's go ahead deploy</p>
      <p begin="00:22:07.340" end="00:22:11.740">...solution again...employment times here...seconds</p>
      <p begin="00:22:11.740" end="00:22:16.900">to deploy your service now as opposed to cloud services today...a few seconds...and running</p>
      <p begin="00:22:16.900" end="00:22:23.650">and...are services deployed of a great benefits as well we have of this platform?</p>
      <p begin="00:22:23.650" end="00:22:27.780">Actually I wanted to do one more thing from...be deployed again grange.</p>
      <p begin="00:22:27.780" end="00:22:31.570">...to fly all the time I mean...to put a break point here ensure</p>
      <p begin="00:22:31.570" end="00:22:37.040">that you've already integrated debugging capabilities in the platform as well</p>
      <p begin="00:22:37.040" end="00:22:41.910">so while I deploy the bit's actually gone to those local cluster</p>
      <p begin="00:22:41.910" end="00:22:46.190">the process gets activated and the visual studio can next to that</p>
      <p begin="00:22:47.230" end="00:22:52.270">...that and attaches...and gives you the complete debugging experience so,</p>
      <p begin="00:22:52.270" end="00:23:02.290">I'll go back and go to the clientele he'll hit that point.</p>
      <p begin="00:23:02.290" end="00:23:09.270">Super-fast deployment time.</p>
      <p begin="00:23:09.270" end="00:23:14.180">And,...point is head of the client is saying that I want to set of value of one and the</p>
      <p begin="00:23:14.180" end="00:23:18.580">previous value was zero which was true because we just activated this actor</p>
      <p begin="00:23:18.580" end="00:23:23.090">...again, you know, that the client actually does this in a loop so it will come back and</p>
      <p begin="00:23:23.090" end="00:23:27.790">it will say hey why don't you said the value to the previous value was one</p>
      <p begin="00:23:27.790" end="00:23:35.480">someone remove the break point...this goal detest the debug...</p>
      <p begin="00:23:35.480" end="00:23:40.310">as you can see the client is going it's incrementing the value so let's go back to the</p>
      <p begin="00:23:40.310" end="00:23:50.310">service public explorer and see what got deployed some refreshed this.</p>
      <p begin="00:23:50.310" end="00:23:54.790">So, this time you'll notice that I have one partition but I actually have three</p>
      <p begin="00:23:54.790" end="00:23:59.020">...I have a primary and then...these so,</p>
      <p begin="00:23:59.020" end="00:24:03.230">as the state changes are done on a primary they get replicated onto</p>
      <p begin="00:24:03.230" end="00:24:07.370">the second is right so.</p>
      <p begin="00:24:07.370" end="00:24:11.150">That's exactly how you make a...stateful services we have copies</p>
      <p begin="00:24:11.150" end="00:24:14.770">...state replicated around you kill machines, you know,</p>
      <p begin="00:24:14.770" end="00:24:19.510">exactly where they are never lose anybody data...sequel leisure databases is</p>
      <p begin="00:24:19.510" end="00:24:24.510">book exactly like...copies of databases machine fails we just fail over the other</p>
      <p begin="00:24:24.510" end="00:24:30.930">copy...so you known what I'm going to do next I'm going to actually</p>
      <p begin="00:24:30.930" end="00:24:36.890">restart this primary the notice what happens in this area?</p>
      <p begin="00:24:36.890" end="00:24:41.120">As a...what happens as well as to the client.</p>
      <p begin="00:24:41.120" end="00:24:44.380">So, you can see a replica went down immediately another replica</p>
      <p begin="00:24:44.380" end="00:24:50.570">was selected as a primary and, then you can see here.</p>
      <p begin="00:24:50.570" end="00:25:02.130">That we did not lose overstate...started from the same state right...</p>
      <p begin="00:25:02.130" end="00:25:04.910">So, that's how easy it is to build</p>
      <p begin="00:25:04.910" end="00:25:09.790">...reliable stateful services using actor programming model</p>
      <p begin="00:25:09.790" end="00:25:14.450">let's switch back to so that a lot of features in the</p>
      <p begin="00:25:14.450" end="00:25:19.100">actor programming model that we when shown we have.</p>
      <p begin="00:25:19.100" end="00:25:23.120">...session that you can goal and what's so that we can</p>
      <p begin="00:25:23.120" end="00:25:27.600">...to actually talking about the reliable services programming model so,</p>
      <p begin="00:25:27.600" end="00:25:31.440">please go to this session and then watch it...whenever you</p>
      <p begin="00:25:31.440" end="00:25:36.670">can if we talk aboutindepth all the feature that the reliable</p>
      <p begin="00:25:36.670" end="00:25:41.900">actor api provides so back to...so let's talk a little bit about what you saw and...</p>
      <p begin="00:25:41.900" end="00:25:46.960">build on another concept here about how we package deploy and instantiate these applications</p>
      <p begin="00:25:46.960" end="00:25:53.270">...to understand how the...is very important and how you think about...says</p>
      <p begin="00:25:53.270" end="00:25:57.580">...you think about writing some code to be also has some configuration associated</p>
      <p begin="00:25:57.580" end="00:26:03.080">with you...that coding configuration you...together you put that into what we call</p>
      <p begin="00:26:03.080" end="00:26:08.660">the service package the package as a manifests...representation of it</p>
      <p begin="00:26:08.660" end="00:26:13.580">is represents a unit of deployment okay and this think of this think this is simply as</p>
      <p begin="00:26:13.580" end="00:26:16.940">a...type what you do next you...define</p>
      <p begin="00:26:16.940" end="00:26:20.590">...application package...package is like a</p>
      <p begin="00:26:20.590" end="00:26:25.020">container for the service packages it defines of boundary versioning</p>
      <p begin="00:26:25.020" end="00:26:28.810">...boundaries isolation find bunches of lifetime of it</p>
      <p begin="00:26:28.810" end="00:26:32.300">...itself then you can take and you put your service packages</p>
      <p begin="00:26:32.300" end="00:26:37.070">inside here I can define a service package full...service I've had</p>
      <p begin="00:26:37.070" end="00:26:41.910">...I can come along and define another service package here and this might be a web application and this</p>
      <p begin="00:26:41.910" end="00:26:47.290">will be called the uk ...web application type so I've got two types of services</p>
      <p begin="00:26:47.290" end="00:26:51.420">deployment side my application package which provides logical boundary around</p>
      <p begin="00:26:51.420" end="00:26:57.660">...gives units...lifetime versioning and isolation nothing itself is defined as a type?</p>
      <p begin="00:26:57.660" end="00:26:59.440">So, what do I do...</p>
      <p begin="00:26:59.440" end="00:27:02.780">I do now is have defined these types I...load them into</p>
      <p begin="00:27:02.780" end="00:27:07.440">a service fabric we have inside a service called image so what we define only...</p>
      <p begin="00:27:07.440" end="00:27:12.380">always package types and what you can do now you come along and take these package types</p>
      <p begin="00:27:12.380" end="00:27:15.850">...going to create instances of them so remember what's of</p>
      <p begin="00:27:15.850" end="00:27:19.800">...straightforward a service-type is like aasl type and application</p>
      <p begin="00:27:19.800" end="00:27:24.370">packages a contain a for multiple those service types and now just as you think in tabs of</p>
      <p begin="00:27:24.370" end="00:27:29.160">object orientation mechanism we...instances of these things so I can create an instance of</p>
      <p begin="00:27:29.160" end="00:27:33.080">application type and inside that instance of application type</p>
      <p begin="00:27:33.080" end="00:27:38.230">...instances of the service-type to the contains so I gave my cluster</p>
      <p begin="00:27:38.230" end="00:27:43.010">and here this point in time I sang a create and instance and every application instance has a name</p>
      <p begin="00:27:43.010" end="00:27:47.070">associated with it so in this case it may have a namesake fabric slash</p>
      <p begin="00:27:47.070" end="00:27:50.570">...replication and then when I say to service fabric I want</p>
      <p begin="00:27:50.570" end="00:27:55.360">you to deploy the contains service-type and trick instances of those</p>
      <p begin="00:27:55.360" end="00:27:59.730">...from those instances of those micros services have a unique name associated with them,</p>
      <p begin="00:27:59.730" end="00:28:04.560">for example, here are deployed one of the counter service types the other one is</p>
      <p begin="00:28:04.560" end="00:28:08.160">the account a web application type we create instances of those</p>
      <p begin="00:28:08.160" end="00:28:11.980">that associated with that particular application package instance</p>
      <p begin="00:28:11.980" end="00:28:15.590">...results you can have the same way using about types inside</p>
      <p begin="00:28:15.590" end="00:28:18.770">...create hundreds of instances of a particular application</p>
      <p begin="00:28:18.770" end="00:28:23.770">type of a particular versioning I can upgrade and the downgrade any particular</p>
      <p begin="00:28:23.770" end="00:28:29.460">one of those of the set of instances...with that type so this is how we think about</p>
      <p begin="00:28:29.460" end="00:28:33.680">defining microsoft's packaging it and deploying...creating instances</p>
      <p begin="00:28:33.680" end="00:28:38.300">...so we're...going to look at the next program model api I'm going to get...to</p>
      <p begin="00:28:38.300" end="00:28:43.040">...dive into the benefits of housing about reliable services so we looked at the</p>
      <p begin="00:28:43.040" end="00:28:46.690">actor apis it-was property simple to build</p>
      <p begin="00:28:46.690" end="00:28:49.530">stateful and stateless services now if you need</p>
      <p begin="00:28:49.530" end="00:28:54.800">more control and more flexibility you want to use reliable services api</p>
      <p begin="00:28:54.800" end="00:29:00.010">you also can build a very powerful stateless and, stateful applications so,</p>
      <p begin="00:29:00.010" end="00:29:01.680">for example, let's say if you're using</p>
      <p begin="00:29:01.680" end="00:29:06.250">...existing isbn...app you can hosted as a stateless application insights</p>
      <p begin="00:29:06.250" end="00:29:10.090">that was fabric using reliable services api you can also</p>
      <p begin="00:29:10.090" end="00:29:14.330">be powerful stateful applications using reliable collection which we'll talk in</p>
      <p begin="00:29:14.330" end="00:29:16.790">...in a bit so,</p>
      <p begin="00:29:16.790" end="00:29:20.030">in the actor apis we talked about how there was a</p>
      <p begin="00:29:20.030" end="00:29:24.390">...based on currency and then any changes that you make...to your state</p>
      <p begin="00:29:24.390" end="00:29:28.480">...saved at the end of the method well, for the allowable collection</p>
      <p begin="00:29:28.480" end="00:29:33.380">api a sorry reliable services api using the reliable collection api</p>
      <p begin="00:29:33.380" end="00:29:38.270">will give you more control in terms of managing the concurrency as well</p>
      <p begin="00:29:38.270" end="00:29:43.200">as the granularity of your of your update so you can actually have</p>
      <p begin="00:29:43.200" end="00:29:46.370">multiple simultaneous updates happening</p>
      <p begin="00:29:46.370" end="00:29:51.460">to independent keys at the same time and you can out to...throughput applications you</p>
      <p begin="00:29:51.460" end="00:29:56.030">can also communicate using the technology of your choice so, for example,</p>
      <p begin="00:29:56.030" end="00:29:59.960">for the acted apis we were using...proxy and,</p>
      <p begin="00:29:59.960" end="00:30:01.890">we did not know what transported was using</p>
      <p begin="00:30:01.890" end="00:30:07.880">it just independently provided a connection between connection to over to</p>
      <p begin="00:30:07.880" end="00:30:12.830">...for the reliable services api you can use w cf you can</p>
      <p begin="00:30:12.830" end="00:30:18.480">use web api all you can use what we call the service...just like active</p>
      <p begin="00:30:18.480" end="00:30:23.280">proxy or any other any other protocols you may how you can use</p>
      <p begin="00:30:23.280" end="00:30:24.990">...socket the cp</p>
      <p begin="00:30:24.990" end="00:30:31.180">...ftp whatever you preferred...provides more flexibility in terms of communication?</p>
      <p begin="00:30:31.180" end="00:30:34.490">Now building stateful services is really,</p>
      <p begin="00:30:34.490" end="00:30:39.600">really hard and getting...correct is really hard so, what we are doing is that we</p>
      <p begin="00:30:39.600" end="00:30:43.530">...providing you the same familiar concepts that you have</p>
      <p begin="00:30:43.530" end="00:30:47.820">known for your in order to build the your applications using dot</p>
      <p begin="00:30:47.820" end="00:30:52.600">net so previously used to build applications on a single machine single threaded using dot</p>
      <p begin="00:30:52.600" end="00:30:57.760">net collection we then started using...connection collections in order to</p>
      <p begin="00:30:57.760" end="00:31:02.420">provide multi-threaded access we now so you think of</p>
      <p begin="00:31:02.420" end="00:31:07.360">reliably collection as a natural evolution to that it's a collection that basically</p>
      <p begin="00:31:07.360" end="00:31:12.070">spans multi much...machine it offered search it it's...and,</p>
      <p begin="00:31:12.070" end="00:31:15.220">it's transactional?</p>
      <p begin="00:31:15.220" end="00:31:20.030">So, what are the to other to reliably collections that we offer out-of-the-box</p>
      <p begin="00:31:20.030" end="00:31:25.050">so you can use reliable dictionary of key and value or you can use reliable</p>
      <p begin="00:31:25.050" end="00:31:30.580">...you cannot atomically updated one or more of these collections</p>
      <p begin="00:31:30.580" end="00:31:36.220">so you can instantiateone reliable dictionary inside your service or ten reliable</p>
      <p begin="00:31:36.220" end="00:31:41.060">...you can you can instantiate one q fight you are fight you than and</p>
      <p begin="00:31:41.060" end="00:31:46.070">file five...it's up to you and, you can anatomically update</p>
      <p begin="00:31:46.070" end="00:31:50.230">this collections using transactions unsold the transactions</p>
      <p begin="00:31:50.230" end="00:31:56.200">...those reliably collections the changes that you make our replicated and</p>
      <p begin="00:31:56.200" end="00:32:02.370">the arguably...store on multiple replicas within within the cluster the</p>
      <p begin="00:32:02.370" end="00:32:07.560">...when you are of within the transaction the...are reputable and,</p>
      <p begin="00:32:07.560" end="00:32:09.740">the new mutations when you when you enumerate this</p>
      <p begin="00:32:09.740" end="00:32:13.320">...they give you a consistent snapshot of what is</p>
      <p begin="00:32:13.320" end="00:32:19.900">there in the collection so now let's go ahead and build reliable service so,</p>
      <p begin="00:32:19.900" end="00:32:29.390">this time...build award...service all switch over to visual studio?</p>
      <p begin="00:32:29.390" end="00:32:32.560">...build a simple word...service which.</p>
      <p begin="00:32:32.560" end="00:32:35.080">You can add awards to it as the words are added</p>
      <p begin="00:32:35.080" end="00:32:38.460">...counting the occurrences of those words and it is</p>
      <p begin="00:32:38.460" end="00:32:43.000">also counting the total number of words that it has seen so far and,</p>
      <p begin="00:32:43.000" end="00:32:47.800">this get cone dissing method basically returns what is the total count of the words that have been</p>
      <p begin="00:32:47.800" end="00:32:52.080">process you'll notice here I'm using w cf this is the</p>
      <p begin="00:32:52.080" end="00:32:56.340">wc of contract in order to connect to the service and then add the words or</p>
      <p begin="00:32:56.340" end="00:33:01.440">get the cones we'll see other form of communication as we go along and in the</p>
      <p begin="00:33:01.440" end="00:33:05.890">...so here is the stateless service I</p>
      <p begin="00:33:05.890" end="00:33:10.820">derive the stateless service from my work on stateless service from a stateless service</p>
      <p begin="00:33:10.820" end="00:33:12.690">I implement the work on service</p>
      <p begin="00:33:12.690" end="00:33:18.770">interfacehere this is a stateless service so I'm I naturally want multiple</p>
      <p begin="00:33:18.770" end="00:33:21.770">...access...going to use gone current collections</p>
      <p begin="00:33:21.770" end="00:33:25.970">...as I'm using a conquering q in order to the as an input</p>
      <p begin="00:33:25.970" end="00:33:30.840">...as the words that I'll put the words into the...so if you look at the ad</p>
      <p begin="00:33:30.840" end="00:33:35.110">...implementation you'll see that as awards arrive there just include into the</p>
      <p begin="00:33:35.110" end="00:33:39.970">q right then I have a dictionary that basically keeps the</p>
      <p begin="00:33:39.970" end="00:33:42.940">count of those...those words and,</p>
      <p begin="00:33:42.940" end="00:33:47.020">then I have another dictionary that basically contains the total number of</p>
      <p begin="00:33:47.020" end="00:33:51.120">words process through a key which is total...process...I could have</p>
      <p begin="00:33:51.120" end="00:33:55.460">use actually just a member variable here I'm using this to</p>
      <p begin="00:33:55.460" end="00:33:59.900">schorr how you would map that when we build the stateful services so,</p>
      <p begin="00:33:59.900" end="00:34:05.920">there are two things that happen when a services instantiated by service public</p>
      <p begin="00:34:05.920" end="00:34:07.360">...we gordon</p>
      <p begin="00:34:07.360" end="00:34:12.040">...the service...give me your communication listener and that communication</p>
      <p begin="00:34:12.040" end="00:34:17.710">listener has very simple open close and abort method and open</p>
      <p begin="00:34:17.710" end="00:34:22.310">return string this is the address on which your services listening for when</p>
      <p begin="00:34:22.310" end="00:34:26.800">your client ask you hey I want to resolve this service you saw that the services</p>
      <p begin="00:34:26.800" end="00:34:31.990">had names so when the client ascii I want to resolve this service this is the address that we provide to that</p>
      <p begin="00:34:31.990" end="00:34:35.640">...so in this case I'm using</p>
      <p begin="00:34:35.640" end="00:34:40.010">the wc of communication listener this is one of the type that we are</p>
      <p begin="00:34:40.010" end="00:34:43.180">...as part of the reliable services api so,</p>
      <p begin="00:34:43.180" end="00:34:47.000">there is nothing here that's extra you just do new wc of communication</p>
      <p begin="00:34:47.000" end="00:34:52.010">let's not give your contract and say this is the class that implements?</p>
      <p begin="00:34:52.010" end="00:34:56.600">The second thing that happens is that once the services ready...runny</p>
      <p begin="00:34:56.600" end="00:35:01.910">...method is called think of this as the current run method in your in your work and</p>
      <p begin="00:35:01.910" end="00:35:06.480">rule so this is where...doing most of your processing so in this one</p>
      <p begin="00:35:06.480" end="00:35:13.500">method you'll notice the cancellation token here so this cancellation token</p>
      <p begin="00:35:13.500" end="00:35:17.300">is rallied as long as this instance of the</p>
      <p begin="00:35:17.300" end="00:35:20.010">chord is the one that is in the statefull</p>
      <p begin="00:35:20.010" end="00:35:25.070">...primary or in the stateless case is the actual instance...that is handling the</p>
      <p begin="00:35:25.070" end="00:35:29.550">request let's say...to a load balancing movement this instance get</p>
      <p begin="00:35:29.550" end="00:35:34.510">move to a different...within the cluster of this cancellation token will be</p>
      <p begin="00:35:34.510" end="00:35:39.450">canceled by the runtime and then you can react accordingly to save the cancellation token</p>
      <p begin="00:35:39.450" end="00:35:43.050">is cancel I'm...doing the processing because another instance</p>
      <p begin="00:35:43.050" end="00:35:47.950">...get started on a different north and the run erasing method of dot instance we'll get</p>
      <p begin="00:35:47.950" end="00:35:52.710">...so I'm doing a simple dq here</p>
      <p begin="00:35:52.710" end="00:35:57.280">...as long as the items are available in the q a...and,</p>
      <p begin="00:35:57.280" end="00:36:01.220">then I'll count award in the dictionary and then I'll update the total number</p>
      <p begin="00:36:01.220" end="00:36:05.190">of words process right so let's go ahead then and</p>
      <p begin="00:36:05.190" end="00:36:10.020">deployed this service in the same cluster.</p>
      <p begin="00:36:10.020" end="00:36:16.530">While the deployment is happening let's look at how do we use this service or how do we</p>
      <p begin="00:36:16.530" end="00:36:20.710">connect to it in case of factor reconnected using actor proxy?</p>
      <p begin="00:36:20.710" end="00:36:23.830">In this case of...a client</p>
      <p begin="00:36:23.830" end="00:36:28.300">that client says here is the uri of the service and when avoid has</p>
      <p begin="00:36:28.300" end="00:36:32.910">been added...I need to look of where this word is or what</p>
      <p begin="00:36:32.910" end="00:36:37.850">partition is serving this word we'll talk about partitioning in</p>
      <p begin="00:36:37.850" end="00:36:41.930">...in a moment right now the services single partition as we were seeing</p>
      <p begin="00:36:41.930" end="00:36:47.230">even inductor...as well as in this case the services single partition and,</p>
      <p begin="00:36:47.230" end="00:36:51.190">recreate what we call the service partition...this represents</p>
      <p begin="00:36:51.190" end="00:36:55.830">a logical connection to my service correct and in this case,</p>
      <p begin="00:36:55.830" end="00:36:59.840">you know, that we are using...so you're</p>
      <p begin="00:36:59.840" end="00:37:03.990">...service partition client is deriving from a service partition client of the</p>
      <p begin="00:37:03.990" end="00:37:10.080">cf and what...implementing...and get...</p>
      <p begin="00:37:10.080" end="00:37:12.880">When ad method has been called it</p>
      <p begin="00:37:12.880" end="00:37:16.780">...the base class he give me the actual physical...so the base</p>
      <p begin="00:37:16.780" end="00:37:23.130">...gives in the physical channel and then it go-there and...advertising?</p>
      <p begin="00:37:23.130" end="00:37:26.470">This was going to provide me we also have this...</p>
      <p begin="00:37:26.470" end="00:37:31.310">communication system but there's also going to be the ability to talk through web apis credit so we'll.</p>
      <p begin="00:37:31.310" end="00:37:34.040">See that in a...</p>
      <p begin="00:37:34.040" end="00:37:38.430">So, here the service partition...which is provided as...also we use</p>
      <p begin="00:37:38.430" end="00:37:42.990">default service partition resolve...this associated with this...</p>
      <p begin="00:37:42.990" end="00:37:47.910">community communication factory is providing you the location transparency and the</p>
      <p begin="00:37:47.910" end="00:37:50.080">caching of the channel and,</p>
      <p begin="00:37:50.080" end="00:37:55.270">again, this comes as part of...part of the reliable services api so</p>
      <p begin="00:37:55.270" end="00:37:59.620">I think the service should have been deployed by now let's go ahead and look at</p>
      <p begin="00:37:59.620" end="00:38:05.720">...so we have...owned application deployed.</p>
      <p begin="00:38:05.720" end="00:38:10.550">What...statefull...look at the statefull...so this is the stateless work on</p>
      <p begin="00:38:10.550" end="00:38:15.450">service it has obviously a single partition and one instance that is running on node</p>
      <p begin="00:38:15.450" end="00:38:28.020">one to so let's go ahead and fire up the client to it?</p>
      <p begin="00:38:28.020" end="00:38:32.390">So, there's a beautiful console uri...you can see that it's just adding the</p>
      <p begin="00:38:32.390" end="00:38:38.410">...and it's getting that cones...continuously so now.</p>
      <p begin="00:38:38.410" end="00:38:44.760">Let's go back and I'm going to go ahead and.</p>
      <p begin="00:38:44.760" end="00:38:49.940">...replica on restart the core package a node tools so here is the</p>
      <p begin="00:38:49.940" end="00:38:53.450">...applications stateless service package this is the core.</p>
      <p begin="00:38:54.480" end="00:38:57.730">Right.</p>
      <p begin="00:38:57.730" end="00:39:00.410">...restart...</p>
      <p begin="00:39:00.410" end="00:39:02.630">You'll see that the cohn stomp.</p>
      <p begin="00:39:02.630" end="00:39:07.370">Right while it did start but obviously we lost the state because we</p>
      <p begin="00:39:07.370" end="00:39:12.930">...storing the state into the concurrent dictionary not actually the reliable</p>
      <p begin="00:39:12.930" end="00:39:18.450">collections right so this is what happens when you what so you made the</p>
      <p begin="00:39:18.450" end="00:39:20.820">...reliable and, then we'll talking</p>
      <p begin="00:39:20.820" end="00:39:27.990">about how do you make the state reliable right so jump back to the powerpoint presentation?</p>
      <p begin="00:39:27.990" end="00:39:31.260">So, what did I what do I need to dual if I had this</p>
      <p begin="00:39:31.260" end="00:39:36.160">application today index in the current cloud services how would I make it</p>
      <p begin="00:39:36.160" end="00:39:40.910">actually reliable right so the first thing that I have to do is tool...input</p>
      <p begin="00:39:40.910" end="00:39:46.430">...that we had which was the concurrent you I have to make it reliable so I'm going to use</p>
      <p begin="00:39:46.430" end="00:39:50.580">...right and then in order...have to store the</p>
      <p begin="00:39:50.580" end="00:39:54.060">...into...the cones that I'm doing for the</p>
      <p begin="00:39:54.060" end="00:39:59.390">words into the measure table or some other more...table...right so,</p>
      <p begin="00:39:59.390" end="00:40:04.130">this is what it would look like so what whatever is this on this</p>
      <p begin="00:40:04.130" end="00:40:08.560">side this is what would look like if in the current architecture not with service fabrics with</p>
      <p begin="00:40:08.560" end="00:40:12.890">service fabric you basically get a request from your</p>
      <p begin="00:40:12.890" end="00:40:18.050">front-end and your back-end is a stateful micro services using this reliable collection which</p>
      <p begin="00:40:18.050" end="00:40:22.560">are dictionary then q and they have multiple...replicas than</p>
      <p begin="00:40:22.560" end="00:40:27.140">...basically making the state reliable right so you reduce...</p>
      <p begin="00:40:27.140" end="00:40:32.260">a typical three-d...with the front then related year and a back-end to just</p>
      <p begin="00:40:32.260" end="00:40:36.390">...and, your middle dear which is your business logic</p>
      <p begin="00:40:36.390" end="00:40:42.340">...your state income and, compute as...mention is co-located together?</p>
      <p begin="00:40:42.340" end="00:40:46.880">So, let's go back to visual studio.</p>
      <p begin="00:40:46.880" end="00:40:52.850">So, I mean the point is you can build stateless...as...deploy those.</p>
      <p begin="00:40:52.850" end="00:40:57.390">...stateful ones as well and take advantage of those so you may have some existing</p>
      <p begin="00:40:57.390" end="00:41:04.080">code that you just simply want to be...I want to build deploy that in a...way and,</p>
      <p begin="00:41:04.080" end="00:41:08.400">take advantage of that...can also take advantage of how improve on that</p>
      <p begin="00:41:08.400" end="00:41:13.250">the design concept by using stateful this and that way...reduce the complexity</p>
      <p begin="00:41:13.250" end="00:41:18.250">on particular pieces of code the run inside and as you say typically most applications...both</p>
      <p begin="00:41:18.250" end="00:41:23.420">...stateless gateway front-ends and we see can for a lot of the business</p>
      <p begin="00:41:23.420" end="00:41:28.680">...shopping...database likes sit microsoft's is built in terms of a</p>
      <p begin="00:41:28.680" end="00:41:35.190">statefull microsoft in without stateful apis so this is the</p>
      <p begin="00:41:35.190" end="00:41:37.480">...cone servicenow it's a</p>
      <p begin="00:41:37.480" end="00:41:43.540">state full-service you'll notice here is that I'm deriving from I'm deriving from</p>
      <p begin="00:41:43.540" end="00:41:48.090">a state full-service rather than a stateless service I'm still implementing the same I</p>
      <p begin="00:41:48.090" end="00:41:53.340">work on service interface I have stem create communication less than</p>
      <p begin="00:41:53.340" end="00:41:59.470">... method let's see what happens in...previously when the...we</p>
      <p begin="00:41:59.470" end="00:42:03.750">...basically putting the item into the...that we had as a member variable</p>
      <p begin="00:42:03.750" end="00:42:08.620">inside here you'll notice that are november variables here so what we do is that we go ahead</p>
      <p begin="00:42:08.620" end="00:42:13.780">and ask the state manager that's in the base class which is a</p>
      <p begin="00:42:13.780" end="00:42:17.880">reliable state manager to say hey I need an input qi needed reliable</p>
      <p begin="00:42:17.880" end="00:42:22.770">q here is the name of the q which is the input q and the name can be</p>
      <p begin="00:42:22.770" end="00:42:27.800">a string or it can be a uri and you can have multiple ones of those you just</p>
      <p begin="00:42:27.800" end="00:42:30.390">...manager hey I won't get a reliable</p>
      <p begin="00:42:30.390" end="00:42:36.220">...collections in this case I'm getting a...q once I get the reliable</p>
      <p begin="00:42:36.220" end="00:42:40.860">...q and item intuit and commit the transaction so once the transaction is</p>
      <p begin="00:42:40.860" end="00:42:45.480">committed this item is reliably present in the cluster</p>
      <p begin="00:42:45.480" end="00:42:49.820">it's replicated to answer of replica...within the cluster?</p>
      <p begin="00:42:49.820" end="00:42:54.170">And, then again for the communication...I'm using w cf</p>
      <p begin="00:42:54.170" end="00:42:58.770">for the runny...method I have an input qi have award</p>
      <p begin="00:42:58.770" end="00:43:03.580">cone dictionary in a...dictionary seamus previously but instead of a member variable and a</p>
      <p begin="00:43:03.580" end="00:43:05.140">...current dictionary I</p>
      <p begin="00:43:05.140" end="00:43:09.020">...asking the state manager to give me reliable dictionary and</p>
      <p begin="00:43:09.020" end="00:43:14.060">...q right so this is the different this is how you would get</p>
      <p begin="00:43:14.060" end="00:43:17.310">hold of your reliable collections that you want to use</p>
      <p begin="00:43:17.310" end="00:43:21.670">...your within your service again until the cancellation is requested</p>
      <p begin="00:43:22.770" end="00:43:27.330">I'm basically getting the items from the input q and if there is an input</p>
      <p begin="00:43:27.330" end="00:43:29.910">q item I'm adding the</p>
      <p begin="00:43:29.910" end="00:43:35.850">item into the dictionary counting if there was an already in existing item</p>
      <p begin="00:43:35.850" end="00:43:39.150">I'm increasing the...and then I'm saying that the total number of</p>
      <p begin="00:43:39.150" end="00:43:43.480">words process update that as wellcommit the transaction now</p>
      <p begin="00:43:43.480" end="00:43:47.700">this is important all of these three updates that I'm doing I'm</p>
      <p begin="00:43:47.700" end="00:43:53.200">...queuing and item...another collection another dictionary the modifying</p>
      <p begin="00:43:53.200" end="00:43:55.520">...dictionary all of these</p>
      <p begin="00:43:55.520" end="00:44:00.460">are atomic which means that if my process where to fill somewhere here the</p>
      <p begin="00:44:00.460" end="00:44:05.780">item that was dq using this method is actually...</p>
      <p begin="00:44:05.780" end="00:44:12.170">queued until the transaction is committed so, this is the guarantee that we</p>
      <p begin="00:44:12.170" end="00:44:16.970">provide that you can modify multiple collection anatomically and update them</p>
      <p begin="00:44:16.970" end="00:44:22.800">atomically that's a super important thing think about if you write code today and it fails.</p>
      <p begin="00:44:22.800" end="00:44:27.830">Have to...recovery...failures inside that and here we providing transactional guarantees</p>
      <p begin="00:44:27.830" end="00:44:32.650">around updates on those dictionaries to make sure that intellect commit happens provide</p>
      <p begin="00:44:32.650" end="00:44:38.400">full consistency and transaction...roles get some...then fart of the</p>
      <p begin="00:44:38.400" end="00:44:42.590">...connect to the stateful service you'll see the words are being added and they</p>
      <p begin="00:44:42.590" end="00:44:46.770">are being countered let's go ahead and go to go to</p>
      <p begin="00:44:46.770" end="00:44:49.980">a what application so here is a...word</p>
      <p begin="00:44:49.980" end="00:44:54.480">...service right it has one partition and just like for</p>
      <p begin="00:44:54.480" end="00:44:57.280">...stateful actor it has three replica...</p>
      <p begin="00:44:57.280" end="00:45:03.670">a primary primary and secondary primaries en node three output this</p>
      <p begin="00:45:03.670" end="00:45:07.720">an to refresh we'll go ahead and restart the primary</p>
      <p begin="00:45:07.720" end="00:45:18.410">on node three let me move this down?</p>
      <p begin="00:45:18.410" end="00:45:22.080">So, primary replicas been restarted on the replica became</p>
      <p begin="00:45:22.080" end="00:45:26.520">became the primary and you can see that the...are going on and then we haven't lost any</p>
      <p begin="00:45:26.520" end="00:45:30.480">...previously we lost account all the state is reliable the</p>
      <p begin="00:45:30.480" end="00:45:35.400">...still functional while a primary...because that was a very phosphate</p>
      <p begin="00:45:35.400" end="00:45:40.350">...another replica became the secondary became a primary and then I</p>
      <p begin="00:45:40.350" end="00:45:45.200">was able to continue the operation was able to continue the operation because</p>
      <p begin="00:45:45.200" end="00:45:50.390">...is a quorum base system...of three replica to replicas were available</p>
      <p begin="00:45:50.390" end="00:45:54.420">...do this again just so that you can follow along this is...we told...you know,</p>
      <p begin="00:45:54.420" end="00:45:58.190">we've democratize ha you just build apps you simple program</p>
      <p begin="00:45:58.190" end="00:46:02.860">...apis will guarantee the each...availability of this you can...</p>
      <p begin="00:46:02.860" end="00:46:08.510">processes you can take down machines we will always make sure there's a copy with inside the system,</p>
      <p begin="00:46:08.510" end="00:46:13.820">you know, we challenge you to...fully attack this system this is exactly what we do all the time if</p>
      <p begin="00:46:13.820" end="00:46:18.680">I, you know, ...full reliability and consistency of this is how</p>
      <p begin="00:46:18.680" end="00:46:23.390">we rely on the providing full transactional stateful serves that</p>
      <p begin="00:46:23.390" end="00:46:28.250">we run allele heavy workloads on today like sequel leisure and...db</p>
      <p begin="00:46:28.250" end="00:46:33.350">...to restart the replica the replica is now on primaries on node for you'll</p>
      <p begin="00:46:33.350" end="00:46:38.220">notice a switch over happening right here so this became primary that was an active secondary the</p>
      <p begin="00:46:38.220" end="00:46:43.410">...out-going while this replica is still down and it's building software awhile</p>
      <p begin="00:46:43.410" end="00:46:48.180">what will happen is that will start to build-up this replica of this replica will come up it will</p>
      <p begin="00:46:48.180" end="00:46:52.830">...in build which means that while this replica is down that</p>
      <p begin="00:46:52.830" end="00:46:57.540">as bunch of operations happening all of these operations the words that are being added</p>
      <p begin="00:46:57.540" end="00:47:00.920">...the replica needs to be caught up to those so it</p>
      <p begin="00:47:00.920" end="00:47:05.460">becomes in build we're basically saying that okay you still cannot join the replica</p>
      <p begin="00:47:05.460" end="00:47:08.690">...because you don't have all the operation one-third has all the</p>
      <p begin="00:47:08.690" end="00:47:13.270">operation it will become an active part of the replicas it again so,</p>
      <p begin="00:47:14.480" end="00:47:19.900">this is...so now we have seen how we can build</p>
      <p begin="00:47:19.900" end="00:47:23.360">a reliable stateful services using</p>
      <p begin="00:47:23.360" end="00:47:28.080">actor programming model as well as the reliable services programming model so now</p>
      <p begin="00:47:28.080" end="00:47:31.050">...we'll talk about well we have this word...tab</p>
      <p begin="00:47:31.050" end="00:47:35.980">...had a single partition obviously we know that's not scalable so how do we go ahead and</p>
      <p begin="00:47:35.980" end="00:47:39.170">scale the service, yeah, so,</p>
      <p begin="00:47:39.170" end="00:47:44.550">the key concept of this platform is a fact that you with partitioning is first-class you</p>
      <p begin="00:47:44.550" end="00:47:48.920">could have a scale out partitioning design and nodes and build high scale distributed applications</p>
      <p begin="00:47:48.920" end="00:47:53.040">that can run across hundreds of machines all the time we have</p>
      <p begin="00:47:53.040" end="00:47:58.190">...your...is left up to use a developer insiders platform we say no partitioning</p>
      <p begin="00:47:58.190" end="00:48:02.540">is a first-class concepts and how you do your partitioning we provide different mechanism</p>
      <p begin="00:48:02.540" end="00:48:06.630">...we...range based in sixty-four base partitioning or name</p>
      <p begin="00:48:06.630" end="00:48:11.040">base partitioning effectively you come up with the partitioning scheme you want so you want to</p>
      <p begin="00:48:11.040" end="00:48:14.090">use zip code is a partitioning mechanism so you want to use</p>
      <p begin="00:48:14.090" end="00:48:17.910">...id mechanism you can easily build-out ensure choice in terms of the client</p>
      <p begin="00:48:17.910" end="00:48:22.160">...comes in you look at some piece of information and will simply say how</p>
      <p begin="00:48:22.160" end="00:48:26.850">...particular request...particular partitions so partitioning is just exactly you</p>
      <p begin="00:48:26.850" end="00:48:32.230">would think in the typical concept of scaling out any application so here I segregate</p>
      <p begin="00:48:32.230" end="00:48:36.600">my service into pieces of state and code and I...particular request</p>
      <p begin="00:48:36.600" end="00:48:41.980">to that location without state encoded co-located and how a...across hundreds of</p>
      <p begin="00:48:41.980" end="00:48:46.270">thousands of...so...think about this is when you build your serves you say</p>
      <p begin="00:48:46.270" end="00:48:51.140">think about your partition requirements I might need say two thousand partitions and you can deploy</p>
      <p begin="00:48:51.140" end="00:48:57.150">there's two thousand partitions across any number...of machines you might start off with say ten machines</p>
      <p begin="00:48:58.440" end="00:49:02.760">and, you can grow the number machines...clusters so what does it look like typically when you deploy</p>
      <p begin="00:49:02.760" end="00:49:07.380">inside image machines you a partitioning is deployed in one of the nodes inside the cluster of course</p>
      <p begin="00:49:07.380" end="00:49:11.510">...replica copies across other machines annette to make it highly available</p>
      <p begin="00:49:11.510" end="00:49:13.650">unicode deploys a second partition</p>
      <p begin="00:49:13.650" end="00:49:17.650">...service on another machine and makes copies of that and then the third</p>
      <p begin="00:49:17.650" end="00:49:22.490">another machine and forth so on and...pushing the partition across all these now you can</p>
      <p begin="00:49:22.490" end="00:49:27.990">...always partitions down on to a certain number of machines and as...particular partition grows</p>
      <p begin="00:49:27.990" end="00:49:31.980">you say simply add new machines were...the partitions out and</p>
      <p begin="00:49:31.980" end="00:49:36.320">...accordingly...all of this is entirely transparent to-you so, for example,</p>
      <p begin="00:49:36.320" end="00:49:41.310">say one of those partitions came particularly hot...data will say this partitions got more than</p>
      <p begin="00:49:41.310" end="00:49:43.750">the...find a machine that's got the best</p>
      <p begin="00:49:43.750" end="00:49:48.750">utilization of resources and...move it on to that machine so as result, you know,</p>
      <p begin="00:49:48.750" end="00:49:52.550">this partitioning concept enables you to truly think about</p>
      <p begin="00:49:52.550" end="00:49:57.390">high scale distributed systems ...you simply have to just understand</p>
      <p begin="00:49:57.390" end="00:50:01.660">what you'll partitioning scheme your...concepts and we take care of striking and pushing</p>
      <p begin="00:50:01.660" end="00:50:05.650">a partitions across the machines inside the cluster and dealing with all failures inside</p>
      <p begin="00:50:05.650" end="00:50:11.680">of course and dealing with whether but some partitions hot compared to the others are moving them all around?</p>
      <p begin="00:50:11.680" end="00:50:14.450">So, let's say now think...how going-to-take that same</p>
      <p begin="00:50:14.450" end="00:50:18.330">application would application what we do instead we're going to have a</p>
      <p begin="00:50:18.330" end="00:50:22.090">...front-end where...coming...that</p>
      <p begin="00:50:22.090" end="00:50:26.280">...but...or load balance front-end where we have a web api we're going to look at the</p>
      <p begin="00:50:26.280" end="00:50:31.240">...comes in and now we look at the...of that we simply going to scale-up that request</p>
      <p begin="00:50:31.240" end="00:50:35.910">form...particular...to a particular partition we take this word...service create</p>
      <p begin="00:50:35.910" end="00:50:40.350">...numerous partitions for it all and now when of custom from the client hit the web</p>
      <p begin="00:50:40.350" end="00:50:44.940">...web front-end what kind of look at the request itself and send it to particular partition you</p>
      <p begin="00:50:44.940" end="00:50:54.890">...any number of partitions usually scaled out what...declarative mechanism inside here.</p>
      <p begin="00:50:54.890" end="00:50:58.580">...so, let's switch back again to visual studio so,</p>
      <p begin="00:50:58.580" end="00:51:03.960">this is an application manifest this is what mark was talking...when you define</p>
      <p begin="00:51:03.960" end="00:51:07.990">...application type you defined out in the manifest so</p>
      <p begin="00:51:07.990" end="00:51:12.860">in this case as you can see now I have award...web service and I have a</p>
      <p begin="00:51:12.860" end="00:51:17.320">statefull work on service my stateful...services partition</p>
      <p begin="00:51:17.320" end="00:51:21.780">snide has thirteen partition and I have both...service as well as the statefull what</p>
      <p begin="00:51:21.780" end="00:51:27.360">...service and in the same application so there are two service packages so you saw the slide where</p>
      <p begin="00:51:27.360" end="00:51:31.780">...service packages and they were animated and put into the application package</p>
      <p begin="00:51:31.780" end="00:51:37.220">well this is the application package and here are the to service packages that are defined</p>
      <p begin="00:51:37.220" end="00:51:42.500">write a web application packet web service packet...full-service packets so,</p>
      <p begin="00:51:42.500" end="00:51:48.560">now let's look at what does the service looks like right so in this case for the</p>
      <p begin="00:51:48.560" end="00:51:53.960">...everything remains exactly same except that I have basically use instead of</p>
      <p begin="00:51:53.960" end="00:51:57.330">...service communication listener so this is we</p>
      <p begin="00:51:57.330" end="00:52:03.120">provide a communication listener out-of-the-box that you can use remember on the</p>
      <p begin="00:52:03.120" end="00:52:07.310">on the previous case where we were using wc if I had to implement some</p>
      <p begin="00:52:07.310" end="00:52:11.180">...I had to implement that word count service...derived</p>
      <p begin="00:52:11.180" end="00:52:16.400">from service partition client and do bunch of work are no longer I have to do that</p>
      <p begin="00:52:16.400" end="00:52:21.280">basically if I use service communication listener just like act-up proxy?</p>
      <p begin="00:52:21.280" end="00:52:23.350">Create of I actor</p>
      <p begin="00:52:23.350" end="00:52:28.130">interferes I can do service proxy create I service interface and,</p>
      <p begin="00:52:28.130" end="00:52:32.890">I'm done I will get transparent channel to my to my service</p>
      <p begin="00:52:32.890" end="00:52:36.870">rich actually provides location transparency so the conduct looks</p>
      <p begin="00:52:36.870" end="00:52:41.670">exactly the same except that there are no w cf...data contract operation</p>
      <p begin="00:52:41.670" end="00:52:46.270">conduct instead it's deriving from my service so that's one change I am made the</p>
      <p begin="00:52:46.270" end="00:52:50.580">second...as I said...made is to basically...the web service</p>
      <p begin="00:52:50.580" end="00:52:56.320">and change the partition cone in the web service I'm using moving communication</p>
      <p begin="00:52:56.320" end="00:53:01.200">listener so, this is actually a...service the clients will connect to it</p>
      <p begin="00:53:01.200" end="00:53:04.270">through...typically a rest api and</p>
      <p begin="00:53:04.270" end="00:53:07.620">...the orrin communication listener provide stacks I'm hosting and esp</p>
      <p begin="00:53:07.620" end="00:53:12.480">...application and creating a stateless service so this is work on</p>
      <p begin="00:53:12.480" end="00:53:18.600">web services a stateless servicethis...a statefull partition service correct so,</p>
      <p begin="00:53:18.600" end="00:53:22.970">now let's see how it looks like inside the clusterso,</p>
      <p begin="00:53:22.970" end="00:53:27.390">inside the cluster as you can see I have multiple partitions I'm going to</p>
      <p begin="00:53:27.390" end="00:53:31.980">...different view of this using what we called</p>
      <p begin="00:53:31.980" end="00:53:35.530">a cluster monitor this is again a sample application that we</p>
      <p begin="00:53:35.530" end="00:53:40.140">have written so both the service fabric explorer as well as this are using</p>
      <p begin="00:53:40.140" end="00:53:45.540">over management api and this apis our public we also provide the</p>
      <p begin="00:53:45.540" end="00:53:50.700">rest busy apis that you can you can use in order to manage or where your state</p>
      <p begin="00:53:50.700" end="00:53:54.710">...query the cluster so I imagine that some of you will actually say hey</p>
      <p begin="00:53:54.710" end="00:53:56.990">this service fabric exploded as gore but the</p>
      <p begin="00:53:56.990" end="00:54:01.540">ways not that great maybe we'll build something more appealing and more pleasing to</p>
      <p begin="00:54:01.540" end="00:54:06.620">...you can do that using the apis at the management api that we provide</p>
      <p begin="00:54:06.620" end="00:54:09.810">...so here the same slide that mark</p>
      <p begin="00:54:09.810" end="00:54:14.320">...you can see that there are multiple politician's so each of these black boxes represents the</p>
      <p begin="00:54:14.320" end="00:54:18.680">node and inside that multiple applications are deployed</p>
      <p begin="00:54:18.680" end="00:54:22.580">and within that I multiple partitions...when I...</p>
      <p begin="00:54:22.580" end="00:54:28.180">a primary here you'll see the to two-second eddie's corresponding to that are being</p>
      <p begin="00:54:28.180" end="00:54:33.490">...right so now let's go ahead and this term not going to do fail overall I'm going</p>
      <p begin="00:54:33.490" end="00:54:39.080">to show you is that if a...to go down so this is node three</p>
      <p begin="00:54:39.080" end="00:54:49.910">iphone nowhere to go down so let's go ahead and shutdown node three?</p>
      <p begin="00:54:49.910" end="00:54:55.060">...you'll notice that we take...action and all of these primaries that are located here</p>
      <p begin="00:54:55.060" end="00:54:56.240">...will switch and</p>
      <p begin="00:54:56.240" end="00:55:01.080">...switch to a different node as well as all of the active secondary</p>
      <p begin="00:55:01.080" end="00:55:05.750">...are monitors down so now that partitions that we're here the primary that where here are</p>
      <p begin="00:55:05.750" end="00:55:11.410">still available this is the same fail over in a different visualization right so,</p>
      <p begin="00:55:11.410" end="00:55:16.160">I'll go ahead and re enable the...</p>
      <p begin="00:55:16.160" end="00:55:21.400">So, this is the solve healing aspect we have think about this is aac how sequel leisure runs</p>
      <p begin="00:55:21.400" end="00:55:26.860">...of hundreds of thousands of databases machine dies...databases</p>
      <p begin="00:55:26.860" end="00:55:31.540">...particular machine we knows exactly what was running their available over to another machine</p>
      <p begin="00:55:31.540" end="00:55:36.220">as far as a client is concerned it's completely transparent doautomatic</p>
      <p begin="00:55:36.220" end="00:55:40.960">...recopy allocate that...elected become a primary...that and</p>
      <p begin="00:55:40.960" end="00:55:46.520">...no loss of service machine-made come back again will say that's available as part of the cluster again</p>
      <p begin="00:55:46.520" end="00:55:51.980">and then starts to place new primaries...this so as far as you're concerned</p>
      <p begin="00:55:51.980" end="00:55:56.580">machines go machines arrive and this transparent moving of these microsoft...a</p>
      <p begin="00:55:56.580" end="00:56:06.030">...completely transparency and deals with this sort of self...system?</p>
      <p begin="00:56:06.030" end="00:56:08.420">Let's take...questions...the end of nearly...</p>
      <p begin="00:56:09.780" end="00:56:15.460">So, because I didn't start the work on web client I started the work on web</p>
      <p begin="00:56:15.460" end="00:56:18.870">...and, shutdown the node again so you can see that the word</p>
      <p begin="00:56:18.870" end="00:56:22.590">...web client is going on while the node went down the primary</p>
      <p begin="00:56:22.590" end="00:56:27.640">fehler what happened and, then...then transparently relocated</p>
      <p begin="00:56:27.640" end="00:56:32.230">the primary and then the work on-site continuing to happen the count across</p>
      <p begin="00:56:32.230" end="00:56:37.110">medius partitions that are there and this is the total count across all of those partition so,</p>
      <p begin="00:56:37.110" end="00:56:40.850">I'll go ahead and, start the node again and,</p>
      <p begin="00:56:40.850" end="00:56:43.630">then what I'm going to do is that I'm going to</p>
      <p begin="00:56:43.630" end="00:56:48.520">enable so in order to test your application so first of all writing stateful services</p>
      <p begin="00:56:48.520" end="00:56:52.390">...hard you made it very simple using reliable collection but there</p>
      <p begin="00:56:52.390" end="00:56:56.400">...still going to be certain things in your business logic that you have to take care when a</p>
      <p begin="00:56:56.400" end="00:56:59.250">...what happens and you may...well the</p>
      <p begin="00:56:59.250" end="00:57:04.640">fill on happen but, I'm not sure whether I'm doing the right things I want to test my service</p>
      <p begin="00:57:04.640" end="00:57:09.610">...this a key also service this is part of the system so the key</p>
      <p begin="00:57:09.610" end="00:57:14.520">also...starts taking action it basically restarted the</p>
      <p begin="00:57:14.520" end="00:57:18.850">core packages it restarts replica you can see certain things happening here</p>
      <p begin="00:57:18.850" end="00:57:23.610">...restart nodes will ensure the...is how the before moving on to the next round of the</p>
      <p begin="00:57:23.610" end="00:57:25.230">...and...you</p>
      <p begin="00:57:25.230" end="00:57:30.180">can continuously run this in your in your cluster and make sure nothing bad happens your clients</p>
      <p begin="00:57:30.180" end="00:57:35.840">unhappy your clients are continuing and, you know, that your application can</p>
      <p begin="00:57:35.840" end="00:57:41.050">...different kind of failures right so,</p>
      <p begin="00:57:41.050" end="00:57:44.180">before we go over to somebody I would like to</p>
      <p begin="00:57:44.180" end="00:57:48.830">our take this opportunity to thank each and every member of the service public team we've been working</p>
      <p begin="00:57:48.830" end="00:57:52.030">hard this technology for a lot of</p>
      <p begin="00:57:52.030" end="00:58:00.100">...as well as all of forward internal partners and consumers?</p>
      <p begin="00:58:00.100" end="00:58:06.500">...creativity...couple of...so, you to summarize, you know,</p>
      <p begin="00:58:06.500" end="00:58:10.610">we're pretty excited that because of the way we thought about how</p>
      <p begin="00:58:10.610" end="00:58:14.370">...build a high scale services you we realized that when we</p>
      <p begin="00:58:14.370" end="00:58:18.920">moved from these box products to be services you...naturally thought about how we</p>
      <p begin="00:58:18.920" end="00:58:23.540">decomposed these books products into a concept of micros services and is very important, you know,</p>
      <p begin="00:58:23.540" end="00:58:29.240">there's a lot of talk around contain is what they are but...don't design with containers</p>
      <p begin="00:58:29.240" end="00:58:34.190">you design applications and applications get broken down into pieces of code and...pieces of code what</p>
      <p begin="00:58:34.190" end="00:58:38.550">...your application and that's how we think about a microsoft...design application what it</p>
      <p begin="00:58:38.550" end="00:58:43.500">means...fact that those micros get deployed inside...is for isolation</p>
      <p begin="00:58:43.500" end="00:58:48.490">security is part of the characteristics you say of the requirements you want of the service I</p>
      <p begin="00:58:48.490" end="00:58:53.960">...itself how...deployed...and we've been building this platform number of years we're very</p>
      <p begin="00:58:53.960" end="00:58:58.740">confident in it because we know that we run it ourselves with thrilled the fact that we've given</p>
      <p begin="00:58:58.740" end="00:59:02.930">it to you in fact the bits that we should this...I said</p>
      <p begin="00:59:02.930" end="00:59:07.720">...being rolled out across a lot of...first...clusters and...showed you that</p>
      <p begin="00:59:07.720" end="00:59:10.420">...very simple programming model apis</p>
      <p begin="00:59:10.420" end="00:59:15.420">of the access side of things in a reliable something you can go away and build, you know,</p>
      <p begin="00:59:15.420" end="00:59:19.680">stateless services like very useful giga bunches of statefull ones as well you</p>
      <p begin="00:59:19.680" end="00:59:24.530">can compose replications of multiple pieces of code deploy them together</p>
      <p begin="00:59:24.530" end="00:59:29.310">and application you could take existing...of new jess application or arbitrary</p>
      <p begin="00:59:29.310" end="00:59:34.240">executables wrap them inside those service packages that we talked about and put them inside</p>
      <p begin="00:59:34.240" end="00:59:38.810">and application package and just say hey...you to make...applications reliable</p>
      <p begin="00:59:38.810" end="00:59:43.580">...you to deploy them I always...instances running...kill machines just make shows always</p>
      <p begin="00:59:43.580" end="00:59:47.740">...running that's what we refer to as part of microsoft</p>
      <p begin="00:59:47.740" end="00:59:52.100">...how we put these things together but of course if you take advantage of all runtime that we showed you today</p>
      <p begin="00:59:52.100" end="00:59:56.850">we have deep insight into your application we can provide is health model we have</p>
      <p begin="00:59:56.850" end="01:00:02.220">...into in fact fully encourage you to after this...can be a session I talked all about the deployment the</p>
      <p begin="01:00:02.220" end="01:00:07.110">...and management of all this because although we show you how to develop apps here the biggest</p>
      <p begin="01:00:07.110" end="01:00:10.900">cost by far we run one of the services...day-to-day management of these</p>
      <p begin="01:00:10.900" end="01:00:15.600">...think about sequel leisure they've hundreds of updates today across thousands of</p>
      <p begin="01:00:15.600" end="01:00:19.940">machines different versions that run...done...health the monitoring deep</p>
      <p begin="01:00:19.940" end="01:00:23.500">insights what happens here all this transparently so you off this</p>
      <p begin="01:00:23.500" end="01:00:29.750">...of a service I have a session...room next door that tells you...through the walks you through the life-cycle</p>
      <p begin="01:00:29.750" end="01:00:31.850">...this books about how you manage</p>
      <p begin="01:00:31.850" end="01:00:35.860">these services so have you given appreciation over this you are</p>
      <p begin="01:00:35.860" end="01:00:40.080">...is please go and find the developer sdk download</p>
      <p begin="01:00:40.080" end="01:00:44.520">this sdk go get the samples of...hub the...count sample and the other</p>
      <p begin="01:00:44.520" end="01:00:50.210">sample you so here today available there ...tama...to get...started</p>
      <p begin="01:00:50.210" end="01:00:54.730">...lots of feedback forums we want you to go...feedback format aka service fabric</p>
      <p begin="01:00:54.730" end="01:00:59.550">form gives...feedback on the user voice this is...beginning of the journey</p>
      <p begin="01:00:59.550" end="01:01:04.920">for us what we're going to ship the regular sdk later this year...service</p>
      <p begin="01:01:04.920" end="01:01:11.080">inside as...only of applications that you built your...later on whether this year</p>
      <p begin="01:01:11.080" end="01:01:16.430">we shipwindows seven twenty sixteen service fabric will be built into that you</p>
      <p begin="01:01:16.430" end="01:01:20.910">will clusters from that deploy replications there...excited to be</p>
      <p begin="01:01:20.910" end="01:01:25.210">...we're entering a new era of how we think about how we build these high scale</p>
      <p begin="01:01:25.210" end="01:01:28.430">high resilient mission critical services like we run at microsoft</p>
      <p begin="01:01:28.430" end="01:01:32.820">we've given you exactly the same technology if you to do the same and think about how we can take this</p>
      <p begin="01:01:32.820" end="01:01:44.010">...journey of how we build to scale highly resilience services and thank you very much?</p>
      <p begin="01:01:44.010" end="01:01:47.550">I think we have some time for some questions...please comes...microphones or</p>
      <p begin="01:01:48.770" end="01:01:58.230">...all come up and...stage and...love to hear questions...microphones first if you want to go to...</p>
      <p begin="01:01:58.230" end="01:02:01.440">Yeses microphone on.</p>
      <p begin="01:02:01.440" end="01:02:09.620">Semi-final please.</p>
      <p begin="01:02:09.620" end="01:02:15.500">Can we...the...can return the microphone please?</p>
      <p begin="01:02:15.500" end="01:02:19.900">Do they microphones work?</p>
      <p begin="01:02:19.900" end="01:02:23.880">Why don't you come up and then I'll repeat your question okay yes also questions and</p>
      <p begin="01:02:23.880" end="01:02:35.900">...shout...repeated questions?</p>
      <p begin="01:02:35.900" end="01:02:38.490">...so,...question the question is what's migration</p>
      <p begin="01:02:38.490" end="01:02:43.370">...existing cloud services going towards this...continue to invest in cloud</p>
      <p begin="01:02:43.370" end="01:02:47.450">...we have today the...that is cloud services will continual</p>
      <p begin="01:02:47.450" end="01:02:52.690">...have many years as a programme...inside that will provide migration guidance</p>
      <p begin="01:02:52.690" end="01:02:56.260">...moving forward to this effectively your seat today that the</p>
      <p begin="01:02:56.260" end="01:03:00.710">...all model api very similar so the migration pretty much is, you know,</p>
      <p begin="01:03:00.710" end="01:03:03.490">there's a similar program all of...provide design guidance</p>
      <p begin="01:03:03.490" end="01:03:09.230">...our investment in cloud services you should think about this is a next generation of up has platform</p>
      <p begin="01:03:09.230" end="01:03:13.630">...shipped this as a parallel service that you can use will keep them robo</p>
      <p begin="01:03:13.630" end="01:03:17.370">...side-by-side ...this is one where we now have</p>
      <p begin="01:03:17.370" end="01:03:20.920">...deployments high-density...scale and this is</p>
      <p begin="01:03:20.920" end="01:03:26.830">...we've invested all-time so cloud sub-zero...but this is where our investment is going for?</p>
      <p begin="01:03:26.830" end="01:03:30.170">This is your next version of our paths platform this is exactly how we</p>
      <p begin="01:03:30.170" end="01:03:33.430">...unsaid well-run...ioc today, you know,</p>
      <p begin="01:03:33.430" end="01:03:37.610">we showed...stateless world...you build a cloud services very...the run command</p>
      <p begin="01:03:37.610" end="01:03:42.240">...always identically have today...a better separation of the runtime from</p>
      <p begin="01:03:42.240" end="01:03:46.460">the environment so you can take those cloud services...applications now and run</p>
      <p begin="01:03:46.460" end="01:03:51.310">them anyway today cloud services all sort of constrained only...as you that fixed</p>
      <p begin="01:03:51.310" end="01:03:56.190">...locked in now you can minimum premise you can stand-up...you want to running six so you have the</p>
      <p begin="01:03:56.190" end="01:04:03.750">benefit of run anywhere fast deployment high-density this is the next generation of that.</p>
      <p begin="01:04:03.750" end="01:04:08.720">...is how they fit with resource manager you'll see that will stand-up a service</p>
      <p begin="01:04:08.720" end="01:04:14.140">later this year that has a resource manager definition of the next</p>
      <p begin="01:04:14.140" end="01:04:18.160">organ they'll talk about all actually that's even better in the next...that follows</p>
      <p begin="01:04:18.160" end="01:04:22.950">will show you exactly how you...a cluster will show you the portal what runs like a defined</p>
      <p begin="01:04:22.950" end="01:04:27.690">resource manager template but yes...have a template definition of...a cluster machines and</p>
      <p begin="01:04:27.690" end="01:04:37.490">...applications...one question here,...</p>
      <p begin="01:04:37.490" end="01:04:39.650">Yeah, so, you can actually question so it's</p>
      <p begin="01:04:40.950" end="01:04:44.740">...question all the question is what happens if I actually</p>
      <p begin="01:04:44.740" end="01:04:50.570">...down-and-out cluster and...restart...the data is...stored on the disk and</p>
      <p begin="01:04:50.570" end="01:04:55.600">...if you shut down the cluster as long as you're hardest...bottom or</p>
      <p begin="01:04:55.600" end="01:05:03.580">...available you will be able to recover from read where you...</p>
      <p begin="01:05:03.580" end="01:05:08.400">...to know...google there is no...started backing this is the store your local hard disk is</p>
      <p begin="01:05:08.400" end="01:05:13.540">the store you can however for disaster recovery as well as so, for example,</p>
      <p begin="01:05:13.540" end="01:05:15.480">for disaster where to happen and you say</p>
      <p begin="01:05:15.480" end="01:05:20.330">while the entire ragged one down and I didn't actually you look at the</p>
      <p begin="01:05:20.330" end="01:05:24.350">...you could...or dot is a different</p>
      <p begin="01:05:24.350" end="01:05:28.830">frequency it's accorded data that's only for disaster the ability to not in your</p>
      <p begin="01:05:28.830" end="01:05:33.980">heart application odp odf enhancer latency...I'm not going to be affected by</p>
      <p begin="01:05:33.980" end="01:05:40.130">...general design that we've come across here where you hold...tiered made highly...scalable and</p>
      <p begin="01:05:40.130" end="01:05:45.120">...might be the last-minute lost our last day and then you can offload that data to</p>
      <p begin="01:05:45.120" end="01:05:50.500">back and as you...result you have this very low latency high throughput systems you built...for example,</p>
      <p begin="01:05:50.500" end="01:05:55.930">you could...think about it hundreds and hundreds of request coming the second evaluate they tried to</p>
      <p begin="01:05:55.930" end="01:05:58.600">...with storage and put all these event that they would be...the</p>
      <p begin="01:05:58.600" end="01:06:03.450">...io t like the perfect example of this sort of system it systems</p>
      <p begin="01:06:03.450" end="01:06:06.810">wave huge amounts of incoming data we want to run rules on it all, yeah,</p>
      <p begin="01:06:06.810" end="01:06:11.470">that's what...equalizer bills like this...the database is stored on local</p>
      <p begin="01:06:11.470" end="01:06:17.700">disks inside the...db...stored on local this from machines in...hubs as</p>
      <p begin="01:06:17.700" end="01:06:26.430">...event hubs, you know,...we take advantage of using the same mechanism.</p>
      <p begin="01:06:26.430" end="01:06:30.190">Next expression yes I actually while we were talking I actually shut</p>
      <p begin="01:06:30.190" end="01:06:35.160">down the local cluster that is there are no...so I for...all of the nodes I'm going to restarted again</p>
      <p begin="01:06:35.160" end="01:06:43.560">well we while we take...expression you can you can go back from...</p>
      <p begin="01:06:43.560" end="01:06:47.150">Which this?</p>
      <p begin="01:06:47.150" end="01:06:47.880">Okay, so,</p>
      <p begin="01:06:47.880" end="01:06:52.950">the question is you I have my actually db running and I have a client connection to a particular a</p>
      <p begin="01:06:52.950" end="01:06:58.700">primary is running...so,...client when the client</p>
      <p begin="01:06:58.700" end="01:07:03.510">...back in again we have a naming service that is revisit...of where the chron</p>
      <p begin="01:07:03.510" end="01:07:08.980">pr primary is...so it all think of it as a service that...like dns for the whole</p>
      <p begin="01:07:08.980" end="01:07:13.550">cluster when something fails over everything every much service has a unique name, you know, this is</p>
      <p begin="01:07:13.550" end="01:07:18.330">move from here to here...comes back in again the naming services like...the cluster goes always</p>
      <p begin="01:07:18.330" end="01:07:28.110">...so we redirect the client whether you primaries and all that just happens transparency.</p>
      <p begin="01:07:28.110" end="01:07:32.970">Well, once you've established to a primary that it is a tcb connections...yes but if you lose that will</p>
      <p begin="01:07:32.970" end="01:07:37.830">re-establish connection again...but and how it does that it goes in and ask service fabric</p>
      <p begin="01:07:37.830" end="01:07:42.690">...when you primary...or it is active and it just reconnected in...machine again and that's what you</p>
      <p begin="01:07:42.690" end="01:07:47.030">...wrapped up in...apis at service partition resolve that automatic</p>
      <p begin="01:07:47.030" end="01:07:51.730">...resolution...discovery for-you in terms of where things off so things move around the</p>
      <p begin="01:07:51.730" end="01:07:59.500">whole time things fail things...it doesn't...find it for you?</p>
      <p begin="01:07:59.500" end="01:08:02.610">...we provide out-of-the-box communication protocols post on</p>
      <p begin="01:08:02.610" end="01:08:08.100">web api...if you want to build your own one based on tcp sockets ftp</p>
      <p begin="01:08:08.100" end="01:08:12.540">...and caving this implementers small piece of I communication list</p>
      <p begin="01:08:12.540" end="01:08:16.420">...your own one so we don't really go...the community provide</p>
      <p begin="01:08:16.420" end="01:08:20.510">...out-of-the-box communication...to talk...microsoft's...going to build</p>
      <p begin="01:08:20.510" end="01:08:24.650">...talking create go ahead it's free most about benefit is in fact dealing with</p>
      <p begin="01:08:24.650" end="01:08:29.120">failed over discovery lifecycle management and,</p>
      <p begin="01:08:29.120" end="01:08:42.469">resilience and, composition of a service into small pieces of code.</p>
      <p begin="01:08:54.200" end="01:08:59.580">Intuitive...on this is about transactions across the...so the</p>
      <p begin="01:08:59.580" end="01:09:04.920">...that we...timeout...so if you have a big thing inside your transaction</p>
      <p begin="01:09:04.920" end="01:09:09.960">it's going on the other guy is going...and say I cannot...the law for this particular</p>
      <p begin="01:09:09.960" end="01:09:16.600">key and...or if they are not conflicting both of them will go in...and,</p>
      <p begin="01:09:16.600" end="01:09:21.250">the transactions that you so you also different other question which is what happens if I</p>
      <p begin="01:09:21.250" end="01:09:25.620">have a large set of items inside the transaction what happens is that as</p>
      <p begin="01:09:25.620" end="01:09:29.590">you're making the changes those are actually getting replicated at that point in time to</p>
      <p begin="01:09:29.590" end="01:09:34.470">...not waiting for the commit what assuming that most of the commits will successful enhance</p>
      <p begin="01:09:34.470" end="01:09:39.640">we can actually...you're doing it so as a result we don't accumulate a large</p>
      <p begin="01:09:39.640" end="01:09:43.500">be chunk and then replicate in the and it's actually replicating so</p>
      <p begin="01:09:43.500" end="01:09:52.859">...not accumulating that.</p>
      <p begin="01:09:52.859" end="01:09:55.300">Yes.</p>
      <p begin="01:09:55.300" end="01:10:01.630">While for enumeration it is multi version so it is...for the enumeration it...multi</p>
      <p begin="01:10:01.630" end="01:10:03.930">...isolation.</p>
      <p begin="01:10:03.930" end="01:10:09.800">Yeah, because if you...repeatable...you'll get phantom...in when you do the enumeration in order to</p>
      <p begin="01:10:09.800" end="01:10:16.390">...vehement diversion for...</p>
      <p begin="01:10:16.390" end="01:10:25.360">Yes, or no...online...yes...riyadh...online this is the next question were pretty good time for a couple.</p>
      <p begin="01:10:25.360" end="01:10:28.570">No, it was it was it was all running on this machine</p>
      <p begin="01:10:28.570" end="01:10:33.450">and in fact you if you notice I wasn't even connected anywhere on the wireless and</p>
      <p begin="01:10:33.450" end="01:10:37.130">...you can actually so in a production that particular</p>
      <p begin="01:10:37.130" end="01:10:42.430">...will be one node on one machine but, you can actually configure two-run</p>
      <p begin="01:10:42.430" end="01:10:47.540">multiple nodes within within the same machine in fact in...cast we</p>
      <p begin="01:10:47.540" end="01:10:52.500">...hundreds of ignored not only on same machine but within the same process so we're able to</p>
      <p begin="01:10:52.500" end="01:10:56.890">do lot...and actually...white box testing to be able to figure outso,</p>
      <p begin="01:10:56.890" end="01:11:00.010">the court is exactly the same there is no difference in terms</p>
      <p begin="01:11:00.010" end="01:11:04.450">of whether it is running on a single box with ten nodes or whether it's running</p>
      <p begin="01:11:04.450" end="01:11:09.010">inside the jd with one more than one and,...for those who</p>
      <p begin="01:11:09.010" end="01:11:12.870">...mike mongers on...demo yesterday...voting...we actually had a</p>
      <p begin="01:11:12.870" end="01:11:17.970">hundreds of machines that running in the background he didn't show the hundreds of machines but we had</p>
      <p begin="01:11:17.970" end="01:11:23.580">...piling hundreds of...into a set of services we were running to show you the...</p>
      <p begin="01:11:23.580" end="01:11:41.590">on any just partitioned out the application across a of many machines your choice.</p>
      <p begin="01:11:44.050" end="01:11:48.560">what happens is that the cluster without monitored in one of the slide that the nodes are forming the</p>
      <p begin="01:11:48.560" end="01:11:53.720">clustered so let's say if you had one machine go down we will detect</p>
      <p begin="01:11:53.720" end="01:11:57.550">that machine is down and the rest of the nor will basically hilo rounded and</p>
      <p begin="01:11:57.550" end="01:12:03.580">form the cluster and then feel over the workload that was on this machine to a different,</p>
      <p begin="01:12:03.580" end="01:12:07.490">different machine in this give the entire cluster...because I</p>
      <p begin="01:12:07.490" end="01:12:11.600">have all the nodes in the cluster on the same machine...dinner told this happening next within</p>
      <p begin="01:12:11.600" end="01:12:16.030">...clusters running on as you were going to use that same attacking the</p>
      <p begin="01:12:16.030" end="01:12:20.970">eyesore accessibility service to actually showed accessibility of clusters running...as you're not just on</p>
      <p begin="01:12:20.970" end="01:12:25.260">your local machine so you'll see that and if you notice I think this is a</p>
      <p begin="01:12:25.260" end="01:12:30.190">little bit more deeper but if you notice I did something else as well before starting...what we call</p>
      <p begin="01:12:30.190" end="01:12:35.490">...files that's basically to prevent...situation so it I knew that I have the entire</p>
      <p begin="01:12:35.490" end="01:12:38.190">cluster down if I had only the portion of the</p>
      <p begin="01:12:38.190" end="01:12:41.200">cluster down or there was a network partition...there is a</p>
      <p begin="01:12:41.200" end="01:12:45.740">...duration for which we will...before we'll say those machines are dead and those machines will</p>
      <p begin="01:12:45.740" end="01:12:50.160">actually go down those nodes will actually go down to you will never health split</p>
      <p begin="01:12:50.160" end="01:12:58.000">between situation in your cluster...technologies very important in building a platform?</p>
      <p begin="01:12:58.000" end="01:13:00.980">Yes, so, the...available everything you see runs on your local</p>
      <p begin="01:13:00.980" end="01:13:04.720">...box just as and then what happens is you'll simply go up to either</p>
      <p begin="01:13:04.720" end="01:13:06.550">...say creamy?</p>
      <p begin="01:13:06.550" end="01:13:10.450">...ten machine vm cluster of this running then the option just</p>
      <p begin="01:13:10.450" end="01:13:14.340">...in exactly the same way you saw running here in the same when from</p>
      <p begin="01:13:14.340" end="01:13:16.510">...you can...them all is like...</p>
      <p begin="01:13:17.800" end="01:13:27.030">All-you-can-eat...yeah, we run it all on...</p>
      <p begin="01:13:27.030" end="01:13:30.850">Correct so we're question is it on premise yes you'll see a few months triangle</p>
      <p begin="01:13:30.850" end="01:13:35.380">...version of you can create a cluster insight asher of machines we</p>
      <p begin="01:13:35.380" end="01:13:39.920">...part of windows have a twenty sixteen so you've got to take windows server you will network</p>
      <p begin="01:13:39.920" end="01:13:44.820">them all together turn on service...fun have...cluster anyway, you have</p>
      <p begin="01:13:44.820" end="01:13:54.800">...network connectives you can build a cluster of machines effectively.</p>
      <p begin="01:13:54.800" end="01:13:55.960">This technology moi.</p>
      <p begin="01:14:02.340" end="01:14:06.850">...so, there are multiple layers of the apis...talk.</p>
      <p begin="01:14:06.850" end="01:14:10.450">Locate...why don't we go out...think the question.</p>

    </div>
  </body>
</tt>